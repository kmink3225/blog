```{python}
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima_process import arma_generate_sample

# Set random seed for reproducibility
np.random.seed(0)

# Generate stationary time series (AR(1) process)
ar_params = np.array([1, -0.9])
ma_params = np.array([1])
ar1 = arma_generate_sample(ar=ar_params, ma=ma_params, nsample=1000)

# Generate non-stationary time series (random walk)
random_walk = np.cumsum(np.random.normal(0, 1, 1000))

# Function to calculate rolling covariance
def rolling_covariance(x, window=100, lag=1):
    return np.array([np.cov(x[i:i+window], x[i+lag:i+window+lag])[0,1] 
                     for i in range(len(x)-window-lag+1)])

# Calculate rolling covariances
cov_ar1 = rolling_covariance(ar1)
cov_random_walk = rolling_covariance(random_walk)

# Plotting
fig, axs = plt.subplots(2, 2, figsize=(15, 10))

# Plot time series
axs[0, 0].plot(ar1)
axs[0, 0].set_title('Stationary Time Series (AR(1))')
axs[0, 0].set_xlabel('Time')
axs[0, 0].set_ylabel('Value')

axs[0, 1].plot(random_walk)
axs[0, 1].set_title('Non-stationary Time Series (Random Walk)')
axs[0, 1].set_xlabel('Time')
axs[0, 1].set_ylabel('Value')

# Plot rolling covariances
axs[1, 0].plot(cov_ar1)
axs[1, 0].set_title('Rolling Covariance of Stationary Series')
axs[1, 0].set_xlabel('Time')
axs[1, 0].set_ylabel('Covariance')
axs[1, 0].axhline(y=0, color='r', linestyle='--')

axs[1, 1].plot(cov_random_walk)
axs[1, 1].set_title('Rolling Covariance of Non-stationary Series')
axs[1, 1].set_xlabel('Time')
axs[1, 1].set_ylabel('Covariance')
axs[1, 1].axhline(y=0, color='r', linestyle='--')

plt.tight_layout()
plt.show()
```