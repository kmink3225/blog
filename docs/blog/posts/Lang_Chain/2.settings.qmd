---
title: "RAG 환경설정"
subtitle: ""
description: |
  
categories:
  - RAG
author: Kwangmin Kim
date: 06/09/2025
format: 
  html:
    page-layout: full
    code-fold: true
    toc: true
    number-sections: true
draft: False
---

# 환경설정

## git 설치

* 64-bit Git for Windows Setup 다운로드: [https://git-scm.com/download/win](https://git-scm.com/download/win)
* `add a git bash profile to windows terminal` 옵션 선택
* powershell 관리자 권한으로 실행
* 다음의 명령어를 입력하여 정상 동작하는지 확인

```bash
git --version # or
git
```


## PowerShell Policy 적용

* Window 키 - PowerShell 을 반드시 관리자 권한으로 실행
* 다음의 명령어를 입력하여 Policy 를 적용

```bash
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
```

* 적용이 완료된 후 Windows PowerShell 을 껐다가 킨다. 
* 아래의 진행을 위하여 Windows PowerShell 실행시 "관리자 권한으로 실행" 

## pyenv 설치

```bash
git clone https://github.com/pyenv-win/pyenv-win.git "$env:USERPROFILE\.pyenv"
```

## 환경변수 추가

아래의 내용을 복사하여 붙혀넣기 후 실행

[System.Environment]::SetEnvironmentVariable('PYENV', $env:USERPROFILE + "\.pyenv\pyenv-win\", "User")
[System.Environment]::SetEnvironmentVariable('PYENV_ROOT', $env:USERPROFILE + "\.pyenv\pyenv-win\", "User")
[System.Environment]::SetEnvironmentVariable('PYENV_HOME', $env:USERPROFILE + "\.pyenv\pyenv-win\", "User")
아래의 내용을 복사하여 붙혀넣기 후 실행

[System.Environment]::SetEnvironmentVariable('PATH', $env:USERPROFILE + "\.pyenv\pyenv-win\bin;" + $env:USERPROFILE + "\.pyenv\pyenv-win\shims;" + [System.Environment]::GetEnvironmentVariable('PATH', "User"), "User")

*현재의 Windows PowerShell 을 종료 후 다시 실행*

* `pyenv` 를 입력하여 정상 동작하는지 확인

```bash
pyenv
```

## 파이썬 설치

* 파이썬 3.11 버전 설치

```bash
pyenv install 3.11
```

* 3.11 버전의 python 설정

```bash
pyenv global 3.11
```

* 파이썬 버전 확인

```bash
python --version
```

* 3.11.9 버전이 설치되어 있나 확인 (혹은 3.11.11 버전으로 설치되어도 좋음)

## Poetry 설치

* LangChain 실습을 위해 수 많은 패키지를 설치해야하는데 각 패키지들의 dependency 관리가 매우 복잡
* conda 환경으로 관리하기엔 이 수 많은 패키지의 dependency 관리가 매우 복잡
* 배포자가 편의를 위해 dependency 관리가 끝난 poetry 패키지 관리 도구를 사용하여 자료 배포
* 아래의 명령어를 실행하여 Poetry 패키지 관리 도구를 설치

```bash
pip3 install poetry==1.8.5
```

## 실습코드 실행

* [실습코드 링크](https://github.com/teddylee777/langchain-kr)
* 도큐먼트(Documents) 폴더로 이동

```bash
cd ~/Documents
```

* 아래의 명령어를 실행하여 소스코드를 받는다.

```bash
git clone https://github.com/teddylee777/langchain-kr.git
```

* 아래의 명령어를 실행하여 langchain-kr 디렉토리로 이동합니다.

```bash
cd langchain-kr
```

* 파이썬 가상환경 설정

```bash
poetry shell
```

* 파이썬 패키지 일괄 업데이트

```bash
poetry update
```

## Visual Studio Code 설치

* Visual Studio Code 다운로드
* [다운로드 링크: https://code.visualstudio.com/download](https://code.visualstudio.com/download)
* 다운로드 받은 Visual Studio Code 를 설치 (Applications 폴더에 복사)
* 왼쪽 install extensions 클릭
  * "python" 검색 후 설치
  * "jupyter" 검색 후 설치
* Visual Studio Code 껐다가 재실행
* 우측 상단 "select kernel"
  * python environment 클릭 - 설치한 가상환경이 안뜬다면 Visual Studio Code 껐다가 재실행
