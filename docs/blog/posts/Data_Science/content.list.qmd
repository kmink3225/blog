---
title: "Data Science Content List"
subtitle: Data Science Content List
description: |
  
categories:
  - Data Science
author: Kwangmin Kim
date: 06/1/2025
format: 
  html:
    page-layout: full
    code-fold: true
    toc: true
    number-sections: true
draft: False
---

## 문제 정의 & 모델 선택 역량

### 비즈니스 문제 분석

- 문제 유형 분류 (분류/회귀/생성/검색/최적화)
- ROI 계산 및 성공 지표 정의
- 데이터 가용성 vs 모델 요구사항 분석
- 기술적 제약사항 파악 (지연시간, 정확도, 비용)

### 모델 생태계 이해

- Hugging Face Hub 활용: 모델 탐색, 벤치마크 해석
- Foundation Models 맵핑: GPT-4, Claude, Llama, Mistral 등 특성
- Computer Vision: CLIP, SAM, YOLO, ViT 계열
- 테이블형 데이터: AutoML vs 전통 ML 판단 기준

### 모델 성능 평가

- 벤치마크 해석 (BLEU, ROUGE, MMLU, HellaSwag 등)
- 도메인별 평가 지표 설계
- A/B 테스트 설계 원칙
- 비용-성능 트레이드오프 분석

## Fine-tuning & API 활용 - LangChain

### LLM Fine-tuning 전략

- Parameter-Efficient Fine-tuning: LoRA, QLoRA, Adapter
- Instruction Tuning: 태스크별 프롬프트 데이터셋 구축
- RLHF 개념: 인간 피드백 활용 방법론
- 도메인 적응: 의료, 법률, 금융 등 특화 모델 구축

### API 활용 및 최적화

- OpenAI API: GPT-4, Fine-tuning, Assistants API
- Anthropic Claude: Constitutional AI, Function Calling
- 오픈소스 API: Ollama, vLLM, Text Generation Inference
- 멀티모달 API: GPT-4V, Claude-3, Gemini 활용

### 프롬프트 엔지니어링

- Few-shot Learning 전략
- Chain-of-Thought, Tree-of-Thought
- 프롬프트 최적화 도구 (DSPy, Guidance)
- 프롬프트 보안 (Jailbreaking 방지)

## 시스템 통합 & 아키텍처 - LangChain

### AI 애플리케이션 아키텍처

- RAG 시스템 설계: Vector DB, Embedding, Retrieval 전략
- Agent Framework: LangChain, CrewAI, AutoGen
- 워크플로우 엔진: 복잡한 AI 태스크 체이닝
- 멀티모달 파이프라인: 텍스트+이미지+음성 통합

### 벡터 데이터베이스 & 검색

- Vector DB: Pinecone, Weaviate, Chroma, FAISS
- Embedding 전략: 텍스트, 이미지, 코드 임베딩
- 하이브리드 검색: 키워드 + 시맨틱 검색 결합
- 검색 성능 최적화: 인덱싱, 캐싱 전략

### 모델 서빙 & 인프라

- 모델 서빙: TorchServe, TensorFlow Serving, vLLM
- 로드 밸런싱: 모델별 트래픽 분산
- 캐싱 전략: 응답 캐시, 임베딩 캐시
- 비용 최적화: GPU 사용량, API 호출 최적화

## 운영 & MLOps - LangChain

### 모델 모니터링

- 성능 드리프트: 입력 분포 변화 감지
- 출력 품질 모니터링: 응답 길이, 독성 탐지, 할루시네이션
- 사용자 피드백: 만족도, 정확도 추적
- 비용 모니터링: 토큰 사용량, API 비용 추적

### A/B 테스트 & 실험

- 모델 비교: 다양한 모델/프롬프트 성능 비교
- 점진적 롤아웃: Canary 배포, Blue-Green 배포
- 실험 설계: 통계적 유의성, 표본 크기 계산
- 결과 분석: 비즈니스 메트릭 vs 기술 메트릭

### 거버넌스 & 윤리

- AI 안전성: Content Filtering, Bias 탐지
- 데이터 프라이버시: PII 마스킹, GDPR 준수
- 모델 해석성: LIME, SHAP 등 설명 가능 AI
- 규제 준수: AI Act, 금융/의료 규제 대응

## 고급 통합 & 자동화  - LangChain 일부 커버

### AutoML & 모델 자동화

- AutoML 플랫폼: H2O.ai, DataRobot, AutoGluon
- 하이퍼파라미터 최적화: Optuna, Ray Tune
- 뉴럴 아키텍처 서치: 모델 구조 자동 탐색
- 모델 압축: Pruning, Quantization, Distillation

### 고급 AI 패턴

- Multi-Agent Systems: 협업하는 AI 에이전트
- Tool-Using AI: 외부 도구/API 활용하는 AI
- Self-Improving Systems: 피드백 기반 자동 개선
- Federated Learning: 분산 학습 시스템

## 실습 프로젝트 로드맵

### 초급

1. **문서 QA 시스템**: RAG + OpenAI API
2. **이미지 분류 API**: Pre-trained Vision 모델 + FastAPI

### 중급

3. **커스텀 챗봇**: Fine-tuned LLM + 벡터DB
4. **멀티모달 검색**: 텍스트+이미지 통합 검색

### 고급

5. **AI 에이전트 시스템**: 복잡한 태스크 자동화
6. **A/B 테스트 플랫폼**: 모델 성능 비교 시스템

