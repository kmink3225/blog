---
title: "데이터 플랫폼 리소스 계획 및 구현"
subtitle: "Azure VM에서 SQL Server 배포"
description: "이 글에서는 가상 머신 크기 조정, 스토리지, 네트워킹 옵션을 구성하여 데이터베이스 워크로드에 적절한 성능을 보장하고 적절한 고가용성 옵션을 선택하고 구성한다."
author: Kwangmin Kim
categories:
  - Engineering
date: 2025-04-02
format: 
  html:
    toc: true  
    code-fold: true
    code-copy: true
    code-overflow: wrap
    number-sections: true
    number-depth: 3
    grid:                                            
      sidebar-width: 200px
      body-width: 1150px
      margin-width: 300px
---

## [Azure SQL을 사용하여 IaaS 솔루션 배포](https://learn.microsoft.com/en-us/training/modules/deploy-iaas-solutions-with-azure-sql/2-explain-iaas-options-deploy-azure)

### Introduction

데이터베이스 시스템의 성능 최적화를 위한 주요 고려사항:

- 데이터베이스 워크로드 성능 보장
  - 가상 머신의 적절한 크기 선택이 필수적
    - CPU, 메모리, IOPS 등 리소스 요구사항 분석
    - 워크로드 특성에 맞는 VM 시리즈 선택
  - 스토리지 구성의 최적화
    - Premium SSD, Ultra Disk 등 적절한 스토리지 타입 선택
    - 데이터, 로그, 템프DB 파일의 효율적인 배치
  - 네트워크 설정 최적화
    - 대역폭 요구사항에 맞는 네트워크 구성
    - 보안 및 접근성 고려
- 고가용성 구성
  - 비즈니스 요구사항에 맞는 가용성 수준 결정
  - Always On 가용성 그룹, 장애 조치 클러스터 등 적절한 솔루션 선택
  - 백업 및 복구 전략 수립
- Azure VM에서의 SQL Server 배포 이점
  - 기존 온프레미스 환경의 손쉬운 클라우드 마이그레이션
  - 최소한의 아키텍처 변경으로 신속한 전환 가능
  - 기존 라이선스 및 구성의 재사용 가능
- 성공적인 마이그레이션을 위한 핵심 요소
  - 상세한 마이그레이션 계획 수립
  - 적절한 배포 옵션 선택
  - 철저한 테스트 및 검증 절차

#### 자유도의 차이: IaaS(자유도가 높음) vs PaaS(자유도가 중간) vs SaaS(자유도가 낮음)  

- Software as a Service (SaaS)
  - **관리 수준**: 완전 관리형으로 모든 것이 서비스 제공업체에 의해 관리됨
  - **유지보수**: 서비스 제공업체가 모든 유지보수 담당
  - **확장성**: 자동 확장, 사용자는 구독 수준만 선택
  - **비용**: 구독 기반 과금, 사용량에 따른 요금제
  - **유연성**: 매우 제한적, 제공되는 기능만 사용 가능
  - **적합 사례**: 표준화된 소프트웨어 필요 시 (예: Office 365, Salesforce)
- Azure SQL Database (PaaS)
  - **관리 수준**: 완전 관리형 서비스로 Microsoft가 OS, 하드웨어, 백업, 고가용성 등을 관리
  - **유지보수**: 자동 패치 및 업그레이드
  - **확장성**: 자동 확장 기능 지원
  - **비용**: 사용한 리소스에 따라 비용 지불, 일반적으로 관리 오버헤드가 적음
  - **제한사항**: 일부 고급 SQL Server 기능 사용 불가(CLR, SQL Agent 등)
  - **적합 사례**: 새 애플리케이션 개발, 관리 오버헤드 최소화가 필요한 경우
- IaaS SQL Server (Azure VM)
  - **관리 수준**: 셀프 관리형으로 사용자가 OS, 소프트웨어 업데이트, 백업 등 직접 관리
  - **유지보수**: 수동 패치 및 업그레이드
  - **확장성**: 수동 확장, VM 크기 변경 필요
  - **비용**: VM 인프라에 대한 비용 지불, 관리 오버헤드가 더 많음
  - **유연성**: 모든 SQL Server 기능 사용 가능(SSAS, SSIS, SSRS 등)
  - **적합 사례**: 기존 온프레미스 SQL Server 마이그레이션, 특정 버전/기능 필요 시
- 주요 차이점
  - **제어 수준**: IaaS는 더 많은 제어를 제공하지만 더 많은 관리 책임이 따름
  - **호환성**: IaaS는 온프레미스 SQL Server와 100% 호환, PaaS는 일부 제한
  - **운영 비용**: PaaS는 일반적으로 운영 비용이 더 낮음

### Azure에서 SQL Server를 배포하기 위한 IaaS 옵션 설명

- Azure VM에서 SQL Server를 실행해야 하는 주요 시나리오들:

  1. 이전 버전의 SQL Server가 필요한 경우
    - 일부 애플리케이션은 특정 이전 버전의 SQL Server에서만 작동
    - 공급업체가 지원하는 특정 SQL Server 버전을 사용해야 하는 경우
    - 이런 경우 VM에 원하는 버전을 직접 설치하여 실행하는 것이 가장 좋은 방법
  2. 여러 SQL Server 서비스를 함께 사용해야 하는 경우
    - SQL Server 데이터베이스 엔진과 함께 Analysis Services(분석 서비스)나 
      Integration Services(통합 서비스), Reporting Services(보고 서비스)를 
      같이 사용해야 할 때
    - 이들을 한 VM에서 함께 실행하면 라이선스 비용을 절약할 수 있음
    - Azure에서 일부 서비스는 PaaS로 제공되지만, 비용 효율성을 위해 
      VM에서 함께 실행하는 것이 유리할 수 있음
  3. 애플리케이션 호환성 문제가 있는 경우
    - 일부 애플리케이션은 여러 데이터베이스 간의 쿼리(교차 데이터베이스 쿼리)가 필요
    - Azure SQL Database는 이를 지원하지 않아 VM 사용이 필요
    - 데이터베이스와 다른 서비스들이 특별한 방식으로 함께 동작해야 하는 경우

- IaaS(Infrastructure as a Service)의 장점과 특징:
  - 관리자의 세밀한 시스템 제어
    - Azure가 서버 하드웨어와 네트워크를 관리하지만, 관리자는 다음을 직접 제어 가능:
      - 가상 스토리지 설정
      - 가상 네트워크 구성 
      - SQL Server 설치 및 설정
      - 추가 소프트웨어 설치
  - 인프라 구성의 높은 자유도
    - OS 레벨부터 완전한 제어 가능
    - 커스텀 설정 및 튜닝의 자유로움
  - 세부적인 구성 계획의 중요성
    - 성능 요구사항에 맞는 리소스 할당
    - 확장성을 고려한 아키텍처 설계 
    - 비용 효율적인 리소스 사용 계획

### Azure 서비스 Control Granularity(제어 정밀도) 비교

- IaaS, PaaS, SaaS의 제어 수준 차이
   - IaaS: 가장 높은 제어 수준 제공
   - PaaS: 중간 수준의 제어 제공
   - SaaS: 가장 제한된 제어 수준
- 각 서비스 별 관리 책임
   - SaaS: 사용자는 보안과 데이터 관리만 담당
   - PaaS: 클라우드 제공업체가 OS와 기본 소프트웨어 관리
   - IaaS: 사용자가 OS 패치, 네트워크, 스토리지 구성 등 대부분 관리
- Azure IaaS에서의 책임 분담
   - Microsoft 담당:
     - 물리적 서버
     - 스토리지
     - 물리적 네트워킹
   - 사용자 담당:
     - OS 관리
     - SQL Server 인스턴스 구성
     - 추가 소프트웨어 설치/관리
- IaaS가 필요한 특수 상황
  - 특정 SQL Server/Windows 버전 조합이 필요한 경우
   - SQL Server와 함께 추가 소프트웨어 설치가 필요한 경우
   - CLR, 복제 등 특수 기능 사용이 필요한 경우
   - 기존 Active Directory 인증이 필요한 경우
   - OS 직접 접근이 필요한 애플리케이션 운영 시
- IaaS의 장점
  - 높은 유연성과 제어 가능성
  - 기존 온프레미스 환경과 유사한 구성 가능
  - 클라우드의 이점과 기존 기능의 동시 활용
  - 특수한 요구사항 수용 가능


### SQL Server IaaS Agent Extension(SQL Server IaaS 에이전트 확장)

- Azure Marketplace에서 SQL Server VM을 배포할 때, 프로세스의 일부로 IaaS Agent Extension이 설치된다.
- 확장(Extension)은 VM 배포 후 실행되는 코드로, 일반적으로 배포 후 구성을 수행한다. 
- 예를 들어 백신 소프트웨어 설치나 Windows 기능 활성화 등이 있다. 
- SQL Server IaaS Agent Extension은 관리 부담을 줄일 수 있는 다음과 같은 주요 기능을 제공한다:
  - 자동 백업
  - 자동 패치 적용
  - Azure Key Vault 통합
  - Microsoft Defender for Cloud 통합
  - 포털에서 디스크 사용량 확인
  - 유연한 라이선싱
  - 유연한 버전/에디션 선택
  - SQL 모범 사례 평가

이러한 기능 외에도, 이 확장을 통해 SQL Server의 구성 및 스토리지 사용량 정보를 확인할 수 있다.

![IaaS Agent Extension](../../../../../images/azure/IaaS%20Agent%20Extension.PNG)

### SQL Server 라이선싱 모델
- Azure VM에서 SQL Server 라이선스 사용 방법은 크게 두 가지

1. 종량제(Pay as you Go) 방식
   - Azure Marketplace에서 SQL Server가 설치된 VM 이미지 사용
   - 사용한 시간만큼 VM 비용 + SQL Server 라이선스 비용 지불
   
2. 기존 라이선스 사용(BYOL) 방식
   - Software Assurance(SA) 프로그램 참여 고객만 가능
   - 기존 보유한 SQL Server 라이선스를 Azure VM에 적용
   - VM 구현 후 10일 이내에 Microsoft에 라이선스 사용 보고 필요
   - SQL Server를 직접 설치하거나 커스텀 이미지 업로드 가능

비용 절감을 위한 추가 옵션:
- Windows Server 라이선스도 기존 것 사용 가능 (Azure Hybrid Benefit)
- VM을 1-3년 예약 구매 시 추가 할인
  - 선불 결제 없이 월별 청구 가능
  - 장기 사용 예정인 대형 VM에 특히 유리


### Azure VM 제품군 종류

Azure VM은 다양한 제품군(시리즈)을 제공하며, 각각 특정 용도에 최적화되어 있다.

1. 범용(General Purpose)
   - CPU와 메모리의 균형잡힌 구성
   - 테스트/개발 환경, 소/중규모 DB 서버, 중소 트래픽 웹서버에 적합
2. 컴퓨팅 최적화(Compute Optimized)
   - 높은 CPU 대 메모리 비율
   - 중규모 웹서버, 네트워크 어플라이언스, 배치 처리에 적합
   - 기본적인 머신러닝 워크로드 지원
3. 메모리 최적화(Memory Optimized) 
   - 높은 메모리 대 CPU 비율 (최대 4TB RAM)
   - 대부분의 데이터베이스 워크로드에 적합
4. 스토리지 최적화(Storage Optimized)
   - 고속 로컬 NVMe 임시 스토리지 제공
   - Cassandra 등 스케일아웃 데이터 워크로드에 적합
   - SQL Server 사용 시 Always On 가용성 그룹 등 데이터 보호 구성 필요
5. GPU 최적화
   - 비디오 렌더링/처리
   - GPU 기반 대규모 병렬 머신러닝 워크로드에 적합
6. FPGA 가속
   - 컴퓨팅 집약적 워크로드용
   - 높은 스토리지 처리량과 네트워크 대역폭 제공
7. 고성능 컴퓨팅(HPC)
   - 수천 개 CPU 코어로 수평 확장 가능
   - RDMA 네트워킹을 통한 낮은 지연시간 제공

- VM 크기 선택 방법
  - Azure 포털의 VM 생성 블레이드에서 '모든 크기 보기' 선택
  - 각 크기별 상세 정보 확인 가능:
    - vCPU 수
    - RAM 용량
    - 데이터 디스크 수
    - 최대 IOPS
    - 임시 스토리지 용량
    - 프리미엄 스토리지 지원 여부


### Azure Marketplace

Azure Marketplace는 Azure에서 제공하는 리소스 스토어로, 미리 만들어진 템플릿을 사용해 쉽게 리소스를 생성할 수 있다.

- 주요 특징:
  - 간단한 설정: 기본 정보만 입력하면 빠르게 리소스 생성 가능
  - 빠른 구축: 몇 분 안에 리소스 사용 가능
  - 다양한 옵션: SQL Server, Windows Server 등 다양한 제품 제공
  - 사전 구성: OLTP, Data Warehouse 등 용도에 맞는 설정 제공
- 장점
  - 쉽고 빠른 시작 가능
  - 직관적인 인터페이스
  - 상세 설정 없이도 사용 가능
- 단점
  - 반복 작업이 어려움
  - 자동화하기 불편함

### SQL Server configuration

Azure VM에서 SQL Server를 설치할 때 다음과 같은 기본적인 설정들을 할 수 있다:

- 보안 설정: 방화벽 규칙, 접근 권한 등을 설정
- 네트워크 설정: 가상 네트워크, 서브넷 등을 구성  
- SQL 인증: 사용자 계정과 비밀번호 설정
- SQL 인스턴스: 데이터베이스 엔진 설정

### Understand hybrid scenarios

- 하이브리드 인프라의 필요성
  - 온프레미스/로컬 데이터센터의 SQL Server 인프라 투자 활용 가능
  - 클라우드와 온프레미스의 장점을 모두 활용 가능
  - 운영 복원력 향상과 비용 절감 효과
- 하이브리드 인프라의 장점
  - 클라우드 전환에 신중한 조직을 위한 좋은 시작점
  - 물리적/가상화된 SQL Server 온프레미스 배포를 클라우드로 확장 가능
  - 온프레미스와 클라우드 서비스의 상호 보완적 운영
  - IaaS 서비스(스토리지, SQL Server VM 등) 활용 가능
- 하이브리드 구현 범위
  - 온프레미스와 클라우드 간 하이브리드
  - 여러 클라우드 서비스 간 하이브리드 구현 가능
  - 다양한 SQL Server 하이브리드 시나리오 적용 가능

### SQL Server를 위한 하이브리드 시나리오

SQL Server를 위한 하이브리드 솔루션을 배포할 때 고려할 수 있는 몇 가지 전략

#### 재해 복구

재해 복구는 SQL Server를 하이브리드로 운영할 때 가장 많이 사용되는 방식

- 주요 특징
  - 재난 상황에서도 비즈니스 연속성 보장
  - 여러 데이터 센터에 분산 배치 가능
  - Azure VM을 활용해 비용 효율적인 DR 구축
- 운영 방식
  - 일상적인 처리는 온프레미스 서버 사용
  - 재해 발생 시 Azure로 전환(장애 조치)
  - 여러 지역에 걸쳐 백업 가능

#### SQL Server 백업

SQL Server의 데이터를 안전하게 보관하기 위한 백업 전략

- 백업 방식
  - Azure Storage에 직접 백업 (URL 사용)
  - Azure 파일 공유 활용 (SMB 프로토콜)
- 주요 이점
  - 현장 백업 실패 시에도 데이터 보호
  - Azure VM에서 백업 데이터 복원 테스트 가능
  - 클라우드의 안정적인 스토리지 활용

#### Azure Arc 지원 SQL Server

여러 환경의 SQL Server를 Azure에서 통합 관리할 수 있게 해주는 서비스

- 지원 환경
  - 온프레미스
  - 데이터 센터
  - 엣지 환경
  - 멀티클라우드
- 주요 기능
  - 모든 SQL Server 배포 현황 파악
  - 구성/사용 패턴/보안 평가
  - 실시간 보안 경고
  - 취약점 보고

#### 보안 고려사항

하이브리드 SQL 환경을 안전하게 운영하기 위한 보안 요소

- 기본 요구사항
  - Active Directory와 DNS 설정 (온프레미스/Azure 모두)
  - 안전한 양방향 통신 구축
- 연결 방식
  - 사이트 간(S2S) VPN
  - ExpressRoute
- ExpressRoute 특징
  - 장점
    - 최고 수준의 보안
    - 최소 지연 시간
    - 공용 인터넷과 분리된 전용 채널
  - 단점
    - 높은 비용
    - 멀티클라우드 환경에서 제한적 사용

