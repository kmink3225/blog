---
title: "Database의 기능"
subtitle: "Database" 
description: |
  template
categories:
  - Engineering
author: Kwangmin Kim
date: 07/02/2023
format: 
  html:
    page-layout: full
    code-fold: true
    toc: true
    number-sections: true
comments: 
  utterances: 
    repo: ./docs/comments
draft: False
---

<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">

::: {#Korean .tab-pane .fade .show .active role="tabpanel" aria-labelledby="Korean-tab"}

# Database

* 데이터베이스(database)는 구조화된 데이터의 집합체 (데이터 저장소)
* 특정 목적을 위해 체계적으로 저장되고 관리되는 데이터의 모임이다. 
* 데이터베이스는 데이터를 효율적으로 저장하고 검색할 수 있도록 설계되었으며, 
* 다양한 응용 프로그램과 시스템에서 데이터를 쉽게 접근하고 조작할 수 있도록 지원하는 역할을 한다. 

# Database의 특성

## 구조화된 데이터

데이터베이스는 데이터를 표(table), 행(row), 열(column)과 같은 형태로 조직하여 구조화된 방식으로 저장한다.

## 데이터 무결성

데이터베이스는 데이터를 정확하고 일관되게 유지하기 위해 다양한 무결성 제약 조건을 적용한다.

## 데이터 접근성

데이터베이스 관리 시스템(DBMS)은 사용자가 데이터를 쉽게 접근하고 검색할 수 있도록 다양한 쿼리 언어(예: SQL)를 제공한다.

## 보안

데이터베이스는 데이터에 대한 접근 권한을 제어하여 데이터의 보안을 유지한다.

## 동시성 (다중 사용자 지원)

데이터베이스는 여러 사용자가 동시에 데이터를 접근하고 수정할 수 있도록 지원한다.


# Database System은 어떤 경우에 사용해야하나?

## 데이터베이스가 필요한 경우

### 대량의 데이터 관리가 필요할 때

* 수천에서 수백만 건 이상의 데이터를 효율적으로 저장하고 검색해야 할 때 데이터베이스가 필요하다.
* 예시: 대규모 전자상거래 웹사이트의 상품 목록, 고객 정보, 주문 내역 관리.

### 데이터 일관성과 무결성 유지를 해야할 때

* 데이터를 여러 사용자가 동시에 접근하고 수정하는 환경에서 데이터의 일관성과 무결성을 유지해야 할 때 데이터베이스가 필요하다
* 예시: 은행 시스템에서 계좌 거래 내역 관리.

### 복잡한 쿼리와 데이터 분석을 해야할 때

* 데이터베이스 시스템은 이를 효율적으로 수행할 수 있는 도구와 최적화된 알고리즘을 제공한다.
* 예시: 마케팅 데이터를 분석하여 고객 행동 패턴을 추출하는 경우.

### 데이터 보안 및 접근 제어를 해야할 때

* 민감한 데이터를 저장하고, 사용자별 접근 권한을 관리해야 할 때 데이터베이스가 필요하다.
* 예시: 의료 기록 시스템에서 환자 정보 관리.

### 데이터 백업 및 복구가 필요할 때

* 데이터 손실에 대비하여 정기적인 백업과 복구 기능이 필요할 때 데이터베이스가 유용하다.
* 예시: 기업의 중요한 문서와 기록 보관.

## 데이터베이스가 필요하지 않은 경우 

사실, 위의 데이터베이스가 필요한 경우에 해당되지 않는 경우 소프트웨어 알고리즘만으로 왠만하면 처리가 가능한 경우

### 데이터의 양이 적고, 단순히 메모리 내에서 관리할 수 있는 경우

* 간단한 게임의 점수 기록
* 소규모 개인 프로젝트 데이터 관리.
* 전자식 개폐장치의 비밀번호 관리 
  * Data가 필요하지만 입력받은 번호를 저장해놔야 정답 비밀번호와 비교 가능 하지만 이것 역시 알고리즘 프로그램 회로로 대체 가능. 한명이 한번에 번호를 눌러 정답과 비교. DB가 필요하지 않음

### 데이터 일관성이나 동시 접근에 대한 요구가 낮아 단순한 파일 시스템이나 메모리 구조로 충분한 경우

* 개인용 메모 애플리케이션.

### 복잡한 쿼리나 데이터 관계가 필요 없는 단순한 데이터 저장 및 검색

* 설정 파일이나 캐시 데이터 저장.

### 임시로 사용되는 데이터로, 지속적인 저장이 필요하지 않은 경우

* 실시간 데이터 처리 애플리케이션에서의 중간 계산 결과
* 신호등의 램프 제어: 소규모 Data 필요(신호의 상태를 기억하고 있어야 다음 신호 상태를 결정할 수 있음), 하지만 알고리즘으로 관리할 수 있는 프로그램 회로가 기능 대체 가능. 실질적으론 DB가 필요하지 않음

### 데이터 보안이 중요하지 않은 경우

* 데이터 보안이 큰 우려사항이 아니며, 기본적인 접근 제어만 필요한 경우.
* 공개된 데이터를 사용하는 단순 웹 크롤러.

:::
</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">

::: {#English .tab-pane .fade role="tabpanel" aria-labelledby="English-tab"}

:::


</div>


# Go to Blog Content List

[Blog Content List](../../content_list.qmd)  
[Engineering Content List](../../Engineering/guide_map/index.qmd)