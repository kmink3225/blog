---
title: "Data Governance Study - Data Standard Code"
subtitle: "데이터 표준 관리: 표준 코드 사전"
description: "이 블로그 포스트에서는 데이터 표준 코드의 개념, 목적, 특징, 그리고 관리 방법에 대해 상세히 설명한다. 단일코드, 계층코드, 목록코드, 복합코드 등 다양한 코드 유형과 그 사용 조건을 소개하고, 코드 표준화 대상과 관리 원칙을 제시한다."
author: Kwangmin Kim
categories:
  - Data Governance
date: 2024-08-15
format: 
  html:
    toc: true  
    code-fold: true
    code-copy: true
    code-overflow: wrap
    number-sections: true
    number-depth: 4
    grid:
      sidebar-width: 200px
      body-width: 1150px
      margin-width: 300px
---

# Data Standard Governance > Data Standard Code

## 데이터 표준 코드 사전이란?

* 데이터 표준 코드는 특정 개념이나 항목을 나타내기 위해 일관되게 사용되는 약속된 값의 집합이다.
    * 즉, 코드란 활용하고자 하는 데이터를 약어 혹은 기호로 함축하여 사용하는 데이터를 말한다. 
* 도메인의 한 유형으로서, 속성(컬럼)에 허용된 데이터 값을 제한된 범위 내에서 구체적으로 열거하여 정의한 것을 지칭한다
* 이 데이터 값을 코드값 또는 코드 유효값이라 하며 각각의 코드값에는 의미를 부여한다. 이 의미를 ‘코드값명’ 또는 ‘코드유효값정의’라 한다
* 예시
    * 성별 코드: M (남성), F (여성)
    * 은행 코드: 004 (국민은행), 020 (우리은행)
    * 국가 코드: KR (대한민국), US (미국)
        - 코드명은 "국가코드"이다.
        - 코드값(코드 유효값)은 ISO 3166-1 alpha-2 표준을 따르는 2자리 국가 코드이다.
        - 코드값 명은 해당 국가의 한글 명칭이다.
        - 코드 유효값 정의(설명)는 모든 코드가 ISO 3166-1 alpha-2 기준을 따르며, 영문 대문자 2자리로 구성됨을 명시한다..
    
    | 코드명 | 코드값 | 코드값 명 | 코드 유효값 정의 |
    |--------|--------|-----------|-------------------|
    | 국가코드 | KR | 대한민국 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | US | 미국 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | JP | 일본 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | CN | 중국 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | GB | 영국 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | DE | 독일 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |
    | 국가코드 | FR | 프랑스 | ISO 3166-1 alpha-2 기준, 영문 대문자 2자리 |

### 목적

* 데이터의 일관성 유지
* 시스템 간 데이터 교환 용이
* 데이터 해석의 명확성 제공
    * 전사적으로 표준코드를 사용하도록 함으로써 업무영역간 운영데이터의 불일치를 방지하고 데이터의 정합성을 향상 시킨다.
* 데이터 입력 오류 감소

### 특징

* 고유성: 각 코드는 유일한 의미를 가짐
    * 코드의 중복방지(유사한 코드 검토 포함) 통해 효율적 운영이 가능해야 한다
* 간결성: 일반적으로 짧고 간단한 형태
* 체계성: 논리적인 구조를 가짐
* 확장성: 새로운 항목 추가가 가능한 구조

### 구성 요소

* 코드 값: 실제 사용되는 코드
* 코드 명: 코드가 나타내는 항목의 이름
* 설명: 코드의 의미나 사용 목적
* 유효 기간: 코드의 사용 가능 기간

### 관리 방법

* 코드 관리 시스템 구축
* 정기적인 검토 및 업데이트
* 코드 변경 이력 관리

### 주의사항

* 업계 표준이나 국제 표준 고려
* 코드의 의미가 시간이 지나도 변하지 않도록 설계
* 코드 체계의 일관성 유지


### 코드 표준화 대상 및 원칙

* 표준코드 작성 시 의미를 충분히 파악할 수 있도록 작성을 하며 구성은 표준용어 작성 기준 및 관리원칙을 따른다.

| 순번 | 코드 표준화 대상 및 관리 원칙 | 비고 |
|------|--------------------------------|------|
| 1 | • 코드 정보가 저장되며 코드 테이블에 그 내용이 존재하는 경우 | 표준화 대상 |
| 2 | • 애플리케이션 내부에 코드의 실제 내용이 존재하는 경우 | 표준화 대상 |
| 3 | • 사용 가능한 데이터의 종류가 2개 이상인 경우 | 표준화 대상 |
| 4 | • Yes or No 값 외에 미확정 값(Null)을 가질 수 있는 경우 | 표준화 대상 |
| 5 | • 현재는 Yes or No 처럼 Boolean값을 갖지만 추후 그 이외의 데이터가 추가 될 가능성이 있는 경우 | 표준화 대상 |
| 6 | • Yes or No 처럼 Boolean 값만을 데이터로 가질 경우 'Y'/'N'으로 통일 함 | 관리원칙 |
| 7 | • 표준코드도메인은 관용적으로 사용하는 용어를 우선적으로 사용한다 | 관리원칙 |
| 8 | • 표준코드를 구성할 때에는 가독성을 높이고, 의미를 명확히 전달하기 위해 수식어를 사용하여 구성하도록 한다. | 관리원칙 |
| 9 | • 단일 코드는 하나의 공통 엔티티로 관리한다. | 관리원칙 |
| 10 | • 계층코드는 내용을 분석하여 단일코드 형태로 변경 조정 할 수 있다. | 관리원칙 |
| 11 | • 목록성 코드의 인스턴스 값은 각각 별도의 엔티티로 관리하며 공통코드 엔티티에서는 해당 코드값을 관리하는 테이블 정보를 관리한다. | 관리원칙 |

### 표준 코드 관리

* 표준코드는 신규 모델링 시 데이터 모델 관리자 또는 응용팀에서 도출 신청 후 데이터 표준 담당자가 최종 관리한다. 
죄송합니다. 제가 이해를 돕기 위해 추가 설명을 드리겠습니다. 귀하께서 언급하신 내용은 코드 관리 프로세스의 중요한 부분을 강조하고 있습니다. 이를 반영하여 테이블을 수정해 보겠습니다.

| 순번 | 담당 | 코드 표준 관리 담당 별 역할 | 비고 |
|------|------|------------------------------|------|
| 1 | 응용팀 | • 기능 정의시 데이터 항목에 코드가 필요한 경우 모델러와 협의<br>• 목록성 코드에 대한 요건 제시<br>• 각 업무영역별로 생성된 목록성 코드에 대한 코드값 관리 | 운영시 코드 신청은 업무담당자(현업)가 수행함<br>현업: 코드 신청, 활용 |
| 2 | 데이터 모델<br>관리자 | • 단일코드, 계층코드 등 공통코드를 관리하기 위한 테이블 설계<br>• 업무영역별 목록성 코드 테이블 설계 | |
| 3 | 표준담당자 | • 단일코드/계층코드 신청을 위한 템플릿 제공<br>• 코드명에 대한 표준 준수 검증<br>• 코드 취합/조정 및 공통코드 확정<br>• 코드 중복 조정 작업 수행(인스턴스명 간 유사성 검증)<br>• 데이터 타입 검증(코드 도메인화)<br>• AS-IS 코드와 매핑 정보 관리<br>• 코드 등록, 공통 코드 및 코드 도메인 관리(메타시스템 or Excel)<br>• 신규 코드 생성 및 AS-IS 코드의 코드 값에 대한 재정비 수행<br>• 코드에 대한 Ownership 관리 및 승인 | 표준담당자: 코드 등록 및 관리 |

* 응용팀(현업)은 업무 수행 중 필요한 코드를 식별하고 신청
    * 응용팀(현업)의 비고 항목에 "현업: 코드 신청, 활용"은 실제 업무를 수행하는 현업 담당자가 코드를 신청하고 사용한다
* 표준담당자는 이 신청을 검토하고, 적절한 경우 코드를 등록하며, 전체적인 코드 체계를 관리한다.
    * 표준담당자의 비고 항목에 "표준담당자: 코드 등록 및 관리"는 표준담당자가 신청된 코드를 검토하고, 실제로 시스템에 등록하며, 지속적으로 관리한다는 점을 명확히 한다.

### 표준 코드 유형

* 코드의 구성에 따른 유형으로는 단일, 계층, 목록, 복합코드가 있으며, 내용은 다음과 같다.


| 유형 | 설명 | 예시 |
|------|------|------|
| 단일코드(S) | • [코드값] + [코드내용]의 형태를 갖추는 가장 일반적인 형태의 코드로서 한 개의 코드로 Key가 구성됨<br>• 단일코드의 코드값은 시스템에 등록/관리하며, 등록된 단일코드(코드명, 코드값, 코드값 한글정의)는 프로젝트 내 공통코드 테이블의 형태로 만들어져 전사공통으로 활용됨 | |
| 계층코드(C) | • 하나 이상의 코드를 상속받거나 계층 구조를 통해 생성되어진 코드로 Key 가 구성된 경우<br>• 대분류 / 중분류 / 소분류 와 같은 분류체계를 가짐 | |
| 목록코드(L) | • 목록성코드는 코드명, 코드값, 코드한글정의 외에 부가적인 정보를 관리해야 하는 코드를 의미하며, 해당 업무팀에서 테이블의 형태로 관리한다 | |
| 복합코드(M) | • 두개이상의 코드도메인을 하나의 코드도메인에서 활용하기 위하여 구성.<br>• 복합코드는 단일코드의 코드도메인을 관리함. | |

* 각 코드 유형(단일코드, 계층코드, 목록코드, 복합코드)의 특성과 용도를 명확히 구분하고 있다. 
* 예시
    * 단일코드(S)
        * 단일코드(S) 유형: 각 코드가 하나의 고유한 의미를 가진다.
        * 코드값(고객 구분 코드)은 숫자로 구성되어 있으며, 일반적으로 2자리 숫자를 사용한다.
        * 코드명(고객 구분 명)은 해당 코드의 의미를 명확하게 설명한다.
        * 사용 조건
            * 간단하고 평면적인 분류가 필요할 때
            * 코드 값과 의미가 1:1로 대응될 때
            * 코드의 수가 제한적이고 변경이 적을 때
        * 예시: 고객 구분 코드, 성별코드, 결혼여부코드, 직급코드
    
        | 고객 구분 코드 | 고객 구분 명 |
        |----------------|--------------|
        | 01 | 개인 |
        | 02 | 법인 |
        | 03 | 개인사업자 |
        | 04 | 외국인 |
        | 05 | 공공기관 |
        | 06 | 비영리단체 |
        | 07 | VIP |
        | 08 | 임직원 |
        | 09 | 제휴사 |
        | 10 | 기타 |
        
    * 계층코드(C)
        * 하나 이상의 코드를 상속받거나 계층 구조를 통해 생성되어진 코드로 Key 가 구성된 경우
        * 대분류 / 중분류 / 소분류 와 같은 분류체계를 가짐
            * 정규화: 각 분류 수준이 별도의 테이블로 분리되어 있어 데이터 중복이 최소화된다.
            * 참조 무결성: 외래 키 관계를 통해 데이터의 일관성이 유지된다.
            * 유연성: 각 분류 수준에서 독립적으로 항목을 추가, 수정, 삭제할 수 있다.
            * 확장성: 새로운 분류 항목을 쉽게 추가할 수 있다.
                * 각 분류 수준에 대한 추가 정보(예: 생성일, 수정일, 설명 등)를 쉽게 추가할 수 있는 장점이 있다.
            * 쿼리 효율성: 필요에 따라 조인을 통해 전체 계층 구조를 조회하거나, 특정 수준만 조회할 수 있다.
        * 사용 조건
            * 데이터가 계층적 구조를 가질 때
            * 상위 개념과 하위 개념의 관계를 표현해야 할 때
            * drill-down 분석이 필요한 경우
            * 예시: 조직코드, 상품분류코드, 지역코드

            1. 대분류 코드 테이블:

            | 대분류 코드 | 대분류명 |
            |-------------|----------|
            | A | 전자제품 |
            | B | 가전제품 |
            | C | 의류 |

            2. 중분류 코드 테이블:

            | 중분류 코드 | 중분류명 | 대분류 코드 (FK) |
            |-------------|----------|--------------------|
            | A1 | 컴퓨터 | A |
            | A2 | 휴대폰 | A |
            | B1 | 주방가전 | B |
            | B2 | 생활가전 | B |
            | C1 | 남성복 | C |
            | C2 | 여성복 | C |

            3. 소분류 코드 테이블:

            | 소분류 코드 | 소분류명 | 대분류 코드 (FK) | 중분류 코드 (FK) |
            |-------------|----------|--------------------|--------------------|
            | A11 | 데스크톱 | A | A1 |
            | A12 | 노트북 | A | A1 |
            | A13 | 태블릿 | A | A1 |
            | A21 | 스마트폰 | A | A2 |
            | A22 | 피처폰 | A | A2 |
            | B11 | 냉장고 | B | B1 |
            | B12 | 전자레인지 | B | B1 |
            | B21 | 청소기 | B | B2 |
            | B22 | 세탁기 | B | B2 |
            | C11 | 셔츠 | C | C1 |
            | C12 | 바지 | C | C1 |
            | C21 | 원피스 | C | C2 |
            | C22 | 스커트 | C | C2 |

    * 목록코드(L)       
        * 코드값(은행코드)과 코드명(은행명) 외에 여러 부가 정보를 포함한다.
        * 약칭, 영문명, 주소, 전화번호 등 해당 코드와 관련된 상세 정보를 관리한다.
        * 설립일과 같은 날짜 정보도 포함될 수 있다.
        * 사용여부와 같은 관리 정보도 포함될 수 있다.
        * 목록코드는 일반적으로 해당 업무팀에서 직접 관리하며, 시스템 전반에서 참조되어 사용됨
            * 목록코드의 장점
                * 상세 정보 관리: 코드와 관련된 다양한 부가 정보를 함께 관리할 수 있다.
                * 업무 특성 반영: 특정 업무 영역의 특성을 반영한 정보를 포함할 수 있다.
                * 데이터 일관성: 코드와 관련된 정보를 중앙에서 관리함으로써 데이터의 일관성을 유지할 수 있다.
                * 확장성: 필요에 따라 새로운 정보 항목을 쉽게 추가할 수 있다.
        * 사용 조건
            * 코드와 함께 추가적인 속성 정보가 필요할 때
                * 업무 요구사항 분석
                    * 사용자나 부서가 코드 외에 추가 정보를 자주 요청하는 경우
                    * 코드만으로는 업무 처리에 충분한 정보를 제공하지 못하는 경우
                * 데이터 활용도 검토
                    * 보고서나 분석에서 코드 관련 부가 정보가 자주 필요한 경우
                    * 데이터 조인이나 lookup 작업이 빈번하게 발생하는 경우
                * 시스템 통합 요구사항
                    * 다른 시스템과 데이터를 교환할 때 코드 외 추가 정보가 필요한 경우
                    * 외부 시스템이나 API가 코드와 관련된 부가 정보를 요구하는 경우
                * 변경 관리 필요성
                    * 코드 값이 시간에 따라 변경되거나 이력 관리가 필요한 경우
                    * 코드의 유효 기간이나 사용 상태를 관리해야 하는 경우
                * 복잡한 비즈니스 로직
                    * 코드를 기반으로 복잡한 비즈니스 규칙이나 계산이 필요한 경우
                    * 코드에 따라 다른 처리 로직이 적용되어야 하는 경우  
                * 사용자 인터페이스 요구사항
                    * 코드 선택 시 사용자에게 추가 정보를 제공해야 하는 경우
                    * 코드 검색이나 필터링 시 다양한 기준이 필요한 경우
                * 감사 및 규제 요구사항
                    * 코드 사용에 대한 상세한 이력이나 근거를 유지해야 하는 경우
                    * 규제 준수를 위해 코드와 관련된 부가 정보를 관리해야 하는 경우
            * 코드 정보가 자주 변경되거나 확장될 가능성이 있을 때
            * 코드 정보가 특정 업무 영역에 국한되어 관리될 때
        * 예시: 은행코드, 국가코드, 통화코드

        | 은행코드 | 은행명 | 약칭 | 영문명 | 본점주소 | 대표전화 | 설립일 | 사용여부 |
        |----------|--------|------|--------|----------|----------|--------|----------|
        | 001 | 한국은행 | 한은 | Bank of Korea | 서울특별시 중구 남대문로 39 | 02-759-4114 | 1950-06-12 | Y |
        | 002 | 산업은행 | 산은 | Korea Development Bank | 서울특별시 영등포구 은행로 14 | 1588-1500 | 1954-04-01 | Y |
        | 003 | 기업은행 | IBK | Industrial Bank of Korea | 서울특별시 중구 을지로 79 | 1566-2566 | 1961-08-01 | Y |
        | 004 | KB국민은행 | 국민 | KB Kookmin Bank | 서울특별시 영등포구 국제금융로8길 26 | 1588-9999 | 2001-11-01 | Y |
        | 005 | 하나은행 | 하나 | KEB Hana Bank | 서울특별시 중구 을지로 35 | 1599-1111 | 1967-01-30 | Y |
        | 007 | 수협은행 | 수협 | Suhyup Bank | 서울특별시 송파구 오금로 62 | 1588-1515 | 1962-04-01 | Y |

    * 복합코드 (M)
        * 코드 구성: 복합코드는 '상품카테고리코드'와 '지역코드'를 조합하여 만들어진다.
        * 의미 결합: 두 개의 단일 코드의 의미를 결합하여 새로운 의미를 만든다.
        * 추가 정보: 복합코드에는 단순히 두 코드를 붙인 것 외에도 추가적인 정보(설명, 담당부서, 적용일자 등)를 포함할 수 있다.
        * 유연성: 새로운 상품 카테고리나 지역이 추가될 때 쉽게 확장할 수 있다.
        * 복합코드의 장점
            * 데이터 압축: 여러 정보를 하나의 코드로 표현할 수 있다.
            * 의미 전달: 코드만으로도 여러 차원의 정보를 전달할 수 있다.
            * 유연한 확장: 기존 단일 코드 체계를 유지하면서 새로운 의미를 부여할 수 있다.
                * 데이터 분석: 복합코드를 분해하여 다양한 관점에서 데이터를 분석할 수 있다.
            * 이러한 복합코드는 조직의 복잡한 구조나 다차원적인 정보를 효율적으로 표현하고 관리하는 데 유용하다.
        * 이러한 목록코드는 일반적으로 해당 업무팀에서 직접 관리하며, 시스템 전반에서 참조되어 사용된다. 
        * 사용 조건
            * 두 개 이상의 독립적인 코드 체계를 조합해야 할 때
            * 다차원적인 정보를 하나의 코드로 표현해야 할 때
            * 기존 코드 체계를 유지하면서 새로운 의미를 부여해야 할 때
        * 먼저, 각 단일 코드 도메인을 정의한다.
        * 예시: 지역별 상품코드, 부서별 프로젝트코드
            1. 상품 카테고리 코드 (단일코드)

            | 코드 | 카테고리명 |
            |------|------------|
            | A | 전자제품 |
            | B | 의류 |
            | C | 식품 |

            2. 지역 코드 (단일코드)

            | 코드 | 지역명 |
            |------|--------|
            | 01 | 서울 |
            | 02 | 부산 |
            | 03 | 대구 |

            3. 지역별 상품 코드 (복합코드)

            | 복합코드 | 상품카테고리코드 | 지역코드 | 설명 | 담당부서 | 적용일자 |
            |----------|-------------------|----------|------|----------|----------|
            | A01 | A | 01 | 서울 전자제품 | 서울영업1팀 | 2023-01-01 |
            | A02 | A | 02 | 부산 전자제품 | 부산영업팀 | 2023-01-01 |
            | A03 | A | 03 | 대구 전자제품 | 대구영업팀 | 2023-01-01 |
            | B01 | B | 01 | 서울 의류 | 서울영업2팀 | 2023-01-01 |
            | B02 | B | 02 | 부산 의류 | 부산영업팀 | 2023-01-01 |
            | B03 | B | 03 | 대구 의류 | 대구영업팀 | 2023-01-01 |
            | C01 | C | 01 | 서울 식품 | 서울영업3팀 | 2023-01-01 |
            | C02 | C | 02 | 부산 식품 | 부산영업팀 | 2023-01-01 |
            | C03 | C | 03 | 대구 식품 | 대구영업팀 | 2023-01-01 |

* 선택 시 고려사항
    * 데이터의 구조: 데이터가 계층적인지, 평면적인지 파악
    * 확장성: 향후 코드 추가나 변경 가능성 고려
    * 사용 목적: 데이터 분석, 보고, 시스템 통합 등의 용도 파악
    * 관리 용이성: 코드 관리의 복잡성과 유지보수 고려
    * 업무 특성: 특정 업무 도메인의 요구사항 반영

### 표준 코드 관리항목

* 회사에서 사용하는 표준 코드의 기준 관리항목은 아래와 같다
* 표준코드 관리항목 구성
    * 신규 모델링 단계에서 코드 값에 대한 신청은 오프라인으로 수행된다.
    * 변경 모델링 단계에서 코드 값에 대한 신청은 표준화 담당자를 통해 이루어진다.
    * 모든 코드는 코드 도메인과 매핑 관계를 가지며 ERP 공통 코드 테이블에 대한 데이터 SYNC 작업이 수행된다

| 유형 | 설명 |
|------|------|
| 코드구분값 | • 코드목록값 혹은 계층코드일 경우 최상위 코드 목록값 |
| 코드값 | • 코드 목록에 따른 코드 Value값 |
| 코드명 | • 코드 도메인명과 동일함 |
| 코드설명 | • 코드명 설명 |
| 코드영문명 | • 코드 도메인 영문명과 동일함 |
| 코드길이 | • 실제 코드 값의 길이 |
| 코드구분 | • 단일코드/계층코드/목록성코드로 구분함 |
| 업무구분 | • 코드에 대한 ownership을 가진 담당 업무영역 |
| 상위코드값 | • 상위 코드 Value값 |
| 상위코드구분값 | • 상위코드 목록값 |
| 엔티티명 | • 목록성 코드인 경우 대상 엔티티명 |
| 테이블명 | • 목록성 코드인 경우 대상 테이블명 |

### 표준코드 수식어 유형

* [주제어] + [코드 수식어 유형] + 코드 형태로 정의하여 사용한다.
* 표준코드 구성 체계
    * 수식어 없이 코드용어 생성 가능

| 분류 | 유형 | 설명 | 예시 |
|------|------|------|------|
| 기본 | 유형 | 어떤 비슷한 것들의 본질을 개체로서 나타낸 것, 또는 그것들의 공통되는 성질이나 모양을 정의할 때 사용되는 코드 유형 | 거래 유형 코드 |
| 기본 | 분류 | 코드 값을 체계화 하여 관리하는 경우 사용하며, 주로 대 / 중 / 소 / 세 등의 분류 체계를 갖는 코드에 대해서 '분류'를 사용 | 제품 소분류 코드 |
| 기본 | 종류 | 가급적 사용을 제한하되 '유형'이나 '분류'의 사용 시 의미 전달이 모호해질 경우 혹은 통상적으로 사용되는 경우에 한해서 사용 | 거래 종류 코드 |
| 기본 | 구분 | 따로따로 갈라서 나누는 것으로 '유형'보다는 단순하고 값의 종류가 10개 이내로 제한적이고 값의 범위가 명확한 경우 사용 | 상품항목 구분 코드 |
| 기본 | 항목 | 목록을 나열한 경우에 한해 사용 | 점검 항목 코드 |
| 확장 | 사유 | 인식 작용, 분석, 종합, 추리, 판단 등의 정신 작용에 대한 근거 및 동기 | 취소 사유 코드 |
| 확장 | 상태 | 사물이나 현상이 처해 있는 현재의 모양 또는 형편 | 계약 상태 코드 |
| 확장 | 관계 | 둘 이상의 사람, 사물, 현상 따위가 서로 관련을 맺거나 관련이 있음 | 계약자 관계 코드 |
| 확장 | 용도 | 사용되는 곳 혹은 사용되는 목적을 정의 | 자금 용도 코드 |
| 확장 | 등급 | 높고 낮음이나 좋고 나쁨 따위의 차이를 여러 층으로 구분한 단계 | 차량 등급 코드 |
| 확장 | 지역 | 전체 영역을 어떤 특징으로 나눈 일정한 공간 영역 | 등록 지역 코드 |
| 확장 | 단위 | 어떤 물리량(物理量)의 크기를 나타낼 때 비교의 기준 되는 크기 | 회계 단위 코드 |

### 코드값 부여 원칙

* 코드값(인스턴스)을 부여하는 방식에 대한 4가지 분류가 있으며 코드의 형식을 결정할 수 있다
* 계층 분류형(H)은 조직 구조와 같이 계층적인 관계를 표현하는 데 적합합니다.
* 순차 채번형(S)은 순서가 있는 항목들을 나열할 때 유용합니다.
* 표준약어 부여형(A)은 국제적으로 통용되는 표준 코드를 사용할 때 적합합니다.
* 복합 분류형(C)은 계층 구조와 순차적 번호 부여가 동시에 필요한 경우에 사용됩니다.
* 표준코드 구성 체계
    * [A : Alphabet    N : Numeric   S : Sequence Number]

| 유형 | 설명 | 예시 |
|------|------|------|
| 계층 분류형(H) | • 대/중/소 등의 분류에 의한 구분이 필요한 경우 적용<br>• 일반적으로 10진 분류 체계로 구성<br>• 코드형식: N + N + N<br>    - NN(대분류) + NN(중분류) + NN(소분류)<br>    - NN(본/지점 분류) + NN(실/부 분류) + NN(팀 분류) | [조직구분코드]<br>100000: 본사총괄<br>101000: 기획실<br>101010: 회계팀<br>101020: 자금팀 |
| 순차 채번형(S) | • 일련번호와 같이 순차적으로 번호를 부여하며 부여된 자리를 넘지 않도록 구성<br>• 가능한 결번이 없도록 정의함. 코드 길이 만큼을 앞에 0을 채워서 번호 부여(숫자형 문자)<br>• 코드 형식: SS | [가족구분코드]<br>01: 부<br>02: 모<br>03: 배우자<br>99: 기타 |
| 표준약어 부여형(A) | • 대부분 국제 표준 코드 및 국가표준코드, 업종표준코드 등이 이에 속함.<br>• 코드 형식: AAA | [국가구분코드]<br>CAN: 캐나다<br>CHN: 중국 |
| 복합 분류형(C) | • 계층분류와 순차채번이 결합된 형태의 분류<br>• 코드 형식: ASSSSS | [담보구분코드]<br>A00001: 건물<br>A00002: 토지<br>B00001: 예금 |

### 코드 표준화 원칙     

* 표준코드 구성 체계
* 기본 원칙
    * 원칙적으로  회사 렌터카 시스템 구축에서 사용하는 모든 코드는 통합 관리한다
    * 업무적으로 동일한 의미의 코드나 유사한 코드를 통합 후 표준화된 코드값과 코드내용을 부여한다
    * 목록성 코드의 경우 참조정보(DB명, 테이블명, 컬럼명) 만 관리하며 별도 코드값, 코드내용을 관리하지 않는다. 코드값과 코드내용 이외에 부가적인 정보가 존재하고, 코드에 따라 부가적인 정보의 개수가 다르기 때문에 표준 코드 테이블에서 관리하기 어렵기 때문이다
* 코드값(인스턴스) 부여 원칙
    * 코드값의 부여는 원칙적으로 숫자형 문자 형태의 일련번호(01,02..)를 부여한다
    * 특별한 사유가 없는 한 현업에서 부여한 코드값을 최우선 사용함을 원칙으로 한다
    * 코드값 부여는 가능한 연속적으로 부여한다
    * 코드값 길이는 향후 확장성을 고려해서 부여한다
    * 숫자로만 이루어진 코드는 원칙적으로 허용하지 않으며 코드 길이만큼 숫자형 문자를 이용해서 '0'을 채워서 코드를 부여한다
    * '기타', '해당없음' 등의 내용을 갖는 코드는 가급적 사용하지 않는 것을 원칙으로 하되, 반드시 사용해야 할 경우 해당 자리의 '00', '99' 등의 최대값을 이용한다
    * ' 여부', '유무'의 모든 코드값은 ‘Y＇과 ‘N＇로 사용된다.
* 코드값(인스턴스) 부여 원칙 예외
    * 기존 As-Is에서 특별한 의미를 가지는 코드 값으로 사용되었을 경우 그대로 채택한다
    * 외부에서 정의되어서 표준 약어로 널리 사용되는 있는 코드들은 표준화 대상에서 제외하며, 그대로 사용하도록 한다. 
        * 국가구분코드 등 















