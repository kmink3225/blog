<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kwangmin Kim</title>
<link>kmink3225.netlify.app/docs/blog/</link>
<atom:link href="kmink3225.netlify.app/docs/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>blog</description>
<generator>quarto-1.4.543</generator>
<lastBuildDate>Tue, 31 Dec 2999 15:00:00 GMT</lastBuildDate>
<item>
  <title>Blog Content List</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/content_list.html</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Scalars are denoted with a lower-case letter (ex a ) or a non-bolded lower-case Greek letter (ex <img src="https://latex.codecogs.com/png.latex?%5Calpha"> ).</li>
<li>Vectors are denoted using a bold-faced lower-case letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20a">).</li>
<li>Matrices are denoted using a bold-faced upper-case letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A">, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20%5Cphi">) or a bold-faced upper-case Greek letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20%5CPhi">).</li>
<li>Tensors are denoted using a bold-faced upper-case letter with multiple subscripts or superscripts, indicating the number of indices and the dimensions of the tensor along each axis.
<ul>
<li>A second-order tensor (also known as a matrix) <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A"> with dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20m"> can be represented as: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A_%7Bij%7D"> where <img src="https://latex.codecogs.com/png.latex?i%20=%201,%5Cdots,m"> and <img src="https://latex.codecogs.com/png.latex?j%20=%201,%5Cdots,n">, which are the indices that run over the rows and columns of the matrix, respectively.</li>
<li>A third-order tensor <img src="https://latex.codecogs.com/png.latex?T"> with dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20m%20%5Ctimes%20p"> can be represented as: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A_%7Bijk%7D"> where <img src="https://latex.codecogs.com/png.latex?i%20=%201,%5Cdots,m">, <img src="https://latex.codecogs.com/png.latex?j%20=%201,%5Cdots,n">, which are <img src="https://latex.codecogs.com/png.latex?i">, and <img src="https://latex.codecogs.com/png.latex?k%20=%201,%5Cdots,p"> <img src="https://latex.codecogs.com/png.latex?j">, and <img src="https://latex.codecogs.com/png.latex?k">, which are the indices that run over the three dimensions of the tensor.</li>
</ul></li>
</ul>
</div>
</div>
<section id="contents" class="level1">
<h1>Contents</h1>
<ul>
<li><a href="../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering</a></li>
<li><a href="../../../docs/blog/posts/Surveilance/guide_map/index.html">Surveilance</a></li>
</ul>


</section>

 ]]></description>
  <category>All List</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/content_list.html</guid>
  <pubDate>Tue, 31 Dec 2999 15:00:00 GMT</pubDate>
</item>
<item>
  <title>References</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/References/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Scalars are denoted with a lower-case letter (ex a ) or a non-bolded lower-case Greek letter (ex <img src="https://latex.codecogs.com/png.latex?%5Calpha"> ).</li>
<li>Vectors are denoted using a bold-faced lower-case letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20a">).</li>
<li>Matrices are denoted using a bold-faced upper-case letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A">, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20%5Cphi">) or a bold-faced upper-case Greek letter (ex <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20%5CPhi">).</li>
<li>Tensors are denoted using a bold-faced upper-case letter with multiple subscripts or superscripts, indicating the number of indices and the dimensions of the tensor along each axis.
<ul>
<li>A second-order tensor (also known as a matrix) <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A"> with dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20m"> can be represented as: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A_%7Bij%7D"> where <img src="https://latex.codecogs.com/png.latex?i%20=%201,%5Cdots,m"> and <img src="https://latex.codecogs.com/png.latex?j%20=%201,%5Cdots,n">, which are the indices that run over the rows and columns of the matrix, respectively.</li>
<li>A third-order tensor <img src="https://latex.codecogs.com/png.latex?T"> with dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20m%20%5Ctimes%20p"> can be represented as: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20A_%7Bijk%7D"> where <img src="https://latex.codecogs.com/png.latex?i%20=%201,%5Cdots,m">, <img src="https://latex.codecogs.com/png.latex?j%20=%201,%5Cdots,n">, which are <img src="https://latex.codecogs.com/png.latex?i">, and <img src="https://latex.codecogs.com/png.latex?k%20=%201,%5Cdots,p"> <img src="https://latex.codecogs.com/png.latex?j">, and <img src="https://latex.codecogs.com/png.latex?k">, which are the indices that run over the three dimensions of the tensor.</li>
</ul></li>
</ul>
</div>
</div>
<section id="contents" class="level1">
<h1>Contents</h1>
<ul>
<li><a href="../posts/Engineering/guide_map/index.qmd">Engineering</a></li>
<li><a href="../posts/Surveilance/guide_map/index.qmd">Surveilance</a></li>
</ul>
</section>
<section id="reference" class="level1">
<h1>Reference</h1>
<ul>
<li>Bioinformatics
<ul>
<li><a href="https://edu.insilicogen.com/kobic/course/map">incoedu</a>
<ul>
<li>NGS 데이터 분석 기초편 김상수 / 숭실대학교</li>
<li>CCNGS 데이터 변이 분석 기초편 김상우 / 연세대학교</li>
<li>전사체 데이터 분석 이상혁 / 이화여자대학교<br>
</li>
<li>WES 기초편 최무림 / 서울대학교</li>
<li>단일세포 분석 김규태 / 아주대학교 의과대학 생리학교실</li>
<li>김준일 / 숭실대학교 의생명시스템학부</li>
<li>박지환 / 광주과학기술원 생명과학부</li>
<li>황대희 / 서울대학교 생명과학부</li>
<li>예제 데이터를 활용한 전사체 데이터 분석 김종환 / KOBIC</li>
<li>예제 데이터를 활용한 단일세포 전사체 데이터 분석 김종환 / KOBIC</li>
<li>후성 유전체 데이터 분석 노태영 / 포항공과대학교<br>
</li>
<li>암 유전체 분석 주영석 / KAIST</li>
<li>ChIP-seq 정인경 / KAIST</li>
<li>단백체 분석 황대희 / 서울대학교</li>
<li>기계학습 및 딥러닝 기초 이론과 암 유전체 데이터 딥러닝 적용 실습 김권일 / 경희대학교</li>
<li>롱리드 시퀀싱 데이터 분석 김준 / 서울대학교<br>
</li>
<li>생명정보학 시작하기 안준용 / 고려대학교</li>
<li>인공지능을 활용한 데이터 분석 및 신약개발 활용 김은영 / 삼진제약<br>
</li>
<li>eQTL 분석 최무림 / 서울대학교</li>
<li>Microbiome 이선재 / GIST</li>
<li>이병욱 / KOBIC</li>
</ul></li>
</ul></li>
<li>Statistics
<ul>
<li>George Casella &amp; Rogeer L. Berger - Statistcal Inference, 2nd Edition</li>
<li>Dobson and Barnett (2008) An Introduction to Generalized Linear Model. 3rd Ed. Chapman &amp; Hall.</li>
<li>Fitzmaurice, Laird and Ware (2011) Applied Longitudinal Analysis. 2nd Ed. Wiley.</li>
<li>Hosmer, Lemeshow and May (2008) Applied Survival Analysis. 2nd Ed. Wiley.</li>
<li>슬기로운 통계생활 - https://www.youtube.com/<span class="citation" data-cites="statisticsplaybook">@statisticsplaybook</span></li>
<li>슬기로운 통계생활 - https://github.com/statisticsplaybook</li>
<li>Fast Campus, Coursera, Inflearn</li>
<li>그 외 다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Mathematics
<ul>
<li>James Stewart - Calculus Early Transcedentals, 7th Eidition &amp; any James Stewart series</li>
<li>GILBERT STRANG - Introduction to Linear Algebra, 4th Edition.</li>
<li>임장환 - 머신러닝, 인공지능, 컴퓨터 비전 전공자를 위한 최적화 이론</li>
<li>Fast Campus, Coursera, Inflearn</li>
<li><a href="https://www.youtube.com/playlist?list=PLaqQvlCBe8vIkIEb4GX2ZZ1A4tFYeXR5W">8일간의 선형대수학 기초(이상준 경희대 교수)</a></li>
<li><a href="https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/">Linear Algebra(Prof.&nbsp;Gilbert Strang, MIT Open Courseware)</a></li>
<li><a href="https://github.com/fastai/numerical-linear-algebra/blob/master/README.md">Computational Linear Algebra for Coders</a></li>
<li><a href="http://immersivemath.com/ila/">Immersive linear Algebra</a></li>
<li><a href="https://www.3blue1brown.com/topics/linear-algebra">3blue1brown</a></li>
<li>그 외 다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Machine Learning
<ul>
<li>Gareth M. James, Daniela Witten, Trevor Hastie, Robert Tibshirani - An Introduction to Statistical Learning: With Applications in R 2nd Edition</li>
<li>Trevor Hastie, Robert Tibshirani, Jerome H. Friedman - The Elements of Statistical Learning 2nd Edition</li>
<li>Fast Campus, Coursera, Inflearn</li>
<li>그 외 다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Deep Learning
<ul>
<li>Saito Koki - Deep Learning from Scratch 1,2,3 (밑바닥부터 시작하는 딥러닝 1,2,3)</li>
<li>조준우 - 머신러닝·딥러닝에 필요한 기초 수학 with 파이썬</li>
<li>조준우 - https://github.com/metamath1/noviceml</li>
<li>동빈나 - https://www.youtube.com/c/dongbinna</li>
<li>혁펜하임 - https://www.youtube.com/channel/UCcbPAIfCa4q0x7x8yFXmBag</li>
<li>Fast Campus, Coursera, Inflearn</li>
<li>다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Engineering
<ul>
<li>Fast Campus, Coursera, Inflearn</li>
<li>그 외 다수의 Youtube, and Documents from Googling</li>
</ul></li>
</ul>


</section>

 ]]></description>
  <category>All List</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/References/</guid>
  <pubDate>Tue, 31 Dec 2999 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Engineering</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/</link>
  <description><![CDATA[ 




<section id="it-terminology" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="it-terminology"><span class="header-section-number">1</span> IT Terminology</h2>
<ul>
<li>0000-00-00, Terminology</li>
</ul>
</section>
<section id="data-structure" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-structure"><span class="header-section-number">2</span> Data Structure</h2>
<ul>
<li>2023-01-17, <a href="../2023-01-17_data_structure_overview/">Overview</a></li>
<li>2023-01-18, <a href="../2023-01-18_array/">Array</a></li>
<li>2023-01-18, <a href="../2023-01-18_linked_list/">Linked List</a></li>
<li>2023-01-18, <a href="../2023-01-18_python_list/">Python List</a></li>
<li>2023-01-19, <a href="../2023-01-19_stack/">Stack</a></li>
<li>2023-01-19, <a href="../2023-01-19_queue/">Queue</a></li>
<li>2023-01-26, <a href="../2023-01-19_deque/">Deque</a></li>
<li>2023-01-26, <a href="../2023-01-20_binary_search_tree/">Binary Search Tree</a></li>
<li>2023-01-20, <a href="../2023-01-20_priority_queue/">Priority Queue</a></li>
<li>2023-01-20, <a href="../2023-01-20_graph/">Graph</a></li>
</ul>
</section>
<section id="development-environment-setting" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="development-environment-setting"><span class="header-section-number">3</span> Development Environment Setting</h2>
<section id="wsl2" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="wsl2"><span class="header-section-number">3.1</span> WSL2</h3>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/WSL/01.wsl-install.html">Introduction &amp; Installation</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/Linux/01.linux_comands.html">Frequently Used Linux Command</a></li>
<li>2024-01-25, <a href="../../../../../docs/blog/posts/Engineering/Linux/rm_cannot_remove_files.html">Linux_Error_Fix_rm_cannot_remove_files_busy</a></li>
</ul>
</section>
<section id="docker" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="docker"><span class="header-section-number">3.2</span> Docker</h3>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/Docker/01.docker_install.html">Introduction &amp; Installation</a></li>
</ul>
</section>
<section id="vs-code" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="vs-code"><span class="header-section-number">3.3</span> VS code</h3>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/VScode/01.vscode_install.html">Introduction &amp; Installation</a></li>
</ul>
</section>
<section id="conda" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="conda"><span class="header-section-number">3.4</span> Conda</h3>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/Conda/01.conda_install.html">Introduction &amp; Installation</a></li>
</ul>
</section>
<section id="git" class="level3" data-number="3.5">
<h3 data-number="3.5" class="anchored" data-anchor-id="git"><span class="header-section-number">3.5</span> Git</h3>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/Git/01.git_install.html">Introduction &amp; Installation</a></li>
</ul>
</section>
</section>
<section id="documentation" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="documentation"><span class="header-section-number">4</span> Documentation</h2>
<section id="dynamic-documentation" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="dynamic-documentation"><span class="header-section-number">4.1</span> Dynamic Documentation</h3>
<ul>
<li>2023-01-19, <a href="https://quarto.org/docs/get-started/">Quarto</a></li>
<li>2023-01-19, <a href="https://github.com/yihui/xaringan">xaringan[R]</a></li>
<li>2023-01-19, <a href="https://bookdown.org/yihui/bookdown/get-started.html">Bookdown[R]</a></li>
<li>2023-01-19, <a href="https://decile-team-distil.readthedocs.io/en/latest/index.html">DISTL</a></li>
<li>2023-01-26, <a href="https://www.sphinx-doc.org/en/master/">Sphinx[Python]</a></li>
</ul>
</section>
<section id="diagrams" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="diagrams"><span class="header-section-number">4.2</span> Diagrams</h3>
<ul>
<li>2023-05-01, <a href="https://quarto.org/docs/authoring/diagrams.html">Quarto &amp; Diagrams</a></li>
<li>2023-05-01, <a href="https://graphviz.org/gallery/">Graphiz Gallery</a></li>
<li>2023-05-01, <a href="https://mermaid.js.org/#/">Mermaid Gallery</a></li>
</ul>
</section>
</section>
<section id="aws-cloud" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="aws-cloud"><span class="header-section-number">5</span> AWS Cloud</h2>
<p>Coursera Course: AWS Fundamentals</p>
<ul>
<li>2023-03-09, <a href="../../../../../docs/blog/posts/Engineering/2023-03-02_aws/computing_networking.html">Computing and Networking</a></li>
<li>2023-03-12, <a href="../../../../../docs/blog/posts/Engineering/2023-03-02_aws/storage_database.html">Storage and Database</a></li>
<li>2023-03-26, <a href="../../../../../docs/blog/posts/Engineering/2023-03-02_aws/monitoring_sharedresponsibility.html">Monitoring and SharedResponsibility</a></li>
<li>2023-04-05, <a href="../../../../../docs/blog/posts/Engineering/2023-03-02_aws/infra_security.html">Infrastructure Security</a></li>
</ul>
</section>
<section id="azure-cloud" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="azure-cloud"><span class="header-section-number">6</span> Azure Cloud</h2>
</section>
<section id="gcp" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="gcp"><span class="header-section-number">7</span> GCP</h2>
</section>
<section id="python" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="python"><span class="header-section-number">8</span> python</h2>
<ul>
<li>2023-06-01, <a href="../../../../../docs/blog/posts/Engineering/Python/package_management.html">Package Management: requirements.txt</a></li>
<li>2023-07-01, <a href="../../../../../docs/blog/posts/Engineering/Python/pathlib.html">Pathlib Library: File System Path Management</a></li>
</ul>
</section>
<section id="web" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="web"><span class="header-section-number">9</span> Web</h2>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/web/http_method.html">HTTP Methods</a></li>
</ul>
</section>
<section id="apache-airflow" class="level2" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="apache-airflow"><span class="header-section-number">10</span> Apache Airflow</h2>
<ul>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/01.intro.html">Introduction</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/02.env_setting.html">Airflow Environment Setting</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/03.operator_basic.html">Operator Basics</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/04.python_operator.html">Python Operators</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/05.template_variable.html">Template Variable</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/06.data_share.html">Data Share</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/07.task_handling.html">Task Handling - Advanced</a></li>
<li>2023-05-01, <a href="../../../../../docs/blog/posts/Engineering/airflow/08.more_operators.html">More Operators</a></li>
<li>2023-05-10, <a href="../../../../../docs/blog/posts/Engineering/airflow/09.connection_hook.html">Connection &amp; Hook</a></li>
<li>2023-05-10, <a href="../../../../../docs/blog/posts/Engineering/airflow/10.sensor.html">Sensor</a></li>
<li>2023-05-10, <a href="../../../../../docs/blog/posts/Engineering/airflow/11.airflow_functions.html">More Airflow Functions</a></li>
<li>2023-05-10, <a href="../../../../../docs/blog/posts/Engineering/airflow/11.airflow_functions.html">Operate WebApp Using Rshiny</a></li>
</ul>
</section>
<section id="apache-spark" class="level2" data-number="11">
<h2 data-number="11" class="anchored" data-anchor-id="apache-spark"><span class="header-section-number">11</span> Apache Spark</h2>
</section>
<section id="data-modeling" class="level2" data-number="12">
<h2 data-number="12" class="anchored" data-anchor-id="data-modeling"><span class="header-section-number">12</span> Data Modeling</h2>
</section>
<section id="front-end" class="level2" data-number="13">
<h2 data-number="13" class="anchored" data-anchor-id="front-end"><span class="header-section-number">13</span> Front End</h2>
</section>
<section id="back-end" class="level2" data-number="14">
<h2 data-number="14" class="anchored" data-anchor-id="back-end"><span class="header-section-number">14</span> Back End</h2>
</section>
<section id="public-data" class="level2" data-number="15">
<h2 data-number="15" class="anchored" data-anchor-id="public-data"><span class="header-section-number">15</span> Public data</h2>
<ul>
<li>2024-01-01, <a href="../../../../../docs/blog/posts/Engineering/public_data/index.html">Public Data Centers</a></li>
</ul>


</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/</guid>
  <pubDate>Thu, 31 Dec 2099 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Validation</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Surveilance/guide_map/</link>
  <description><![CDATA[ 




<section id="sgs" class="level2" data-number="1">

<ul>
<li>0000-00-00, EN62304</li>
</ul>
</section>
<section id="fda" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="fda"><span class="header-section-number">2</span> FDA</h2>
<ul>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Surveilance/2022-12-10_FDA_sw_general_guidance/index.html">General Principles of SW Validation</a></li>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Surveilance/2023-01-27_FDA_sw_general_guidance_presentation/index.html">General Principles of SW Validation - Diagram Summary</a></li>
<li>1111-11-11, Guidance for the Content of Premarket Submissions for Software Contained in Medical Devices</li>
</ul>
</section>
<section id="dhf" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="dhf"><span class="header-section-number">3</span> DHF</h2>
</section>
<section id="public-health" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="public-health"><span class="header-section-number">4</span> Public Health</h2>
</section>
<section id="wet-lab" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="wet-lab"><span class="header-section-number">5</span> Wet Lab</h2>
<ul>
<li>0000-00-00, PCR (Polymerase Chain Reaction) Experiment</li>
</ul>


</section>

 ]]></description>
  <category>Surveilance</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Surveilance/guide_map/</guid>
  <pubDate>Sat, 31 Dec 2089 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Governance Study</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Governance/list.html</link>
  <description><![CDATA[ 




<section id="데이터-거버넌스-지식-및-업무-절차-프레임워크" class="level2" data-number="1">

<ul>
<li>데이터 거버넌스 기초
<ul>
<li>정의 및 목적
<ul>
<li>데이터 거버넌스의 정의</li>
<li>데이터 거버넌스의 중요성과 비즈니스 가치</li>
</ul></li>
</ul></li>
<li>핵심 원칙
<ul>
<li>데이터 품질</li>
<li>데이터 보안 및 프라이버시</li>
<li>데이터 접근성 및 공유</li>
<li>데이터 일관성 및 표준화</li>
</ul></li>
<li>주요 구성 요소
<ul>
<li>정책 및 표준</li>
<li>프로세스 및 절차</li>
<li>역할 및 책임</li>
<li>기술 및 도구</li>
</ul></li>
<li>데이터 거버넌스 프레임워크
<ul>
<li>DAMA-DMBOK
<ul>
<li>데이터 관리 지식 체계 개요</li>
<li>11개 지식 영역 이해</li>
</ul></li>
<li>IBM Data Governance Council Maturity Model
<ul>
<li>11개 범주 및 5단계 성숙도 모델 이해</li>
</ul></li>
<li>기타 프레임워크
<ul>
<li>COBIT (Control Objectives for Information and Related Technologies)</li>
<li>ISO/IEC 38500 IT Governance Standard</li>
</ul></li>
</ul></li>
<li>데이터 거버넌스를 위한 기술지원 솔루션
<ul>
<li>Snowflake</li>
<li>Databricks</li>
<li>Purview</li>
<li>Encore</li>
</ul></li>
<li>데이터 거버넌스 구현 단계
<ul>
<li>준비 및 계획</li>
<li>현황 분석 및 요구사항 정의</li>
<li>이해관계자 식별 및 참여</li>
<li>비전 및 목표 설정</li>
</ul></li>
<li>3.2 조직 구성</li>
<li></li>
<li>데이터 거버넌스 위원회 구성</li>
<li>데이터 스튜어드 지정</li>
<li>역할 및 책임 정의</li>
<li></li>
<li>3.3 정책 및 표준 수립</li>
<li></li>
<li>데이터 품질 정책</li>
<li>데이터 보안 및 프라이버시 정책</li>
<li>데이터 아키텍처 표준</li>
<li></li>
<li>3.4 프로세스 설계 및 구현</li>
<li></li>
<li>데이터 생명주기 관리 프로세스</li>
<li>메타데이터 관리 프로세스</li>
<li>데이터 품질 관리 프로세스</li>
<li></li>
<li>3.5 기술 도입</li>
<li></li>
<li>데이터 카탈로그 도구</li>
<li>데이터 품질 관리 도구</li>
<li>메타데이터 관리 도구</li>
<li></li>
<li>3.6 모니터링 및 개선</li>
<li></li>
<li>성과 지표(KPI) 설정 및 측정</li>
<li>지속적인 개선 활동</li>
<li></li>
<li><ol start="4" type="1">
<li>데이터 거버넌스 주요 업무 영역</li>
</ol></li>
<li>4.1 데이터 품질 관리</li>
<li></li>
<li>데이터 프로파일링</li>
<li>데이터 클렌징</li>
<li>데이터 품질 모니터링</li>
<li></li>
<li>4.2 메타데이터 관리</li>
<li></li>
<li>비즈니스 메타데이터</li>
<li>기술 메타데이터</li>
<li>운영 메타데이터</li>
<li></li>
<li>4.3 마스터 데이터 관리 (MDM)</li>
<li></li>
<li>마스터 데이터 식별</li>
<li>마스터 데이터 통합 및 동기화</li>
<li></li>
<li>4.4 데이터 보안 및 프라이버시</li>
<li></li>
<li>데이터 분류</li>
<li>접근 제어</li>
<li>데이터 암호화</li>
<li></li>
<li>4.5 데이터 아키텍처 관리</li>
<li></li>
<li>데이터 모델링</li>
<li>데이터 플로우 관리</li>
<li></li>
<li><ol start="5" type="1">
<li>데이터 거버넌스 도구 및 기술</li>
</ol></li>
<li>5.1 데이터 카탈로그 도구</li>
<li></li>
<li>Collibra</li>
<li>Alation</li>
<li>IBM Watson Knowledge Catalog</li>
<li></li>
<li>5.2 데이터 품질 관리 도구</li>
<li></li>
<li>Informatica Data Quality</li>
<li>Talend Data Quality</li>
<li>IBM InfoSphere Information Server for Data Quality</li>
<li></li>
<li>5.3 메타데이터 관리 도구</li>
<li></li>
<li>ASG Enterprise Data Intelligence</li>
<li>Adaptive Metadata Manager</li>
<li>erwin Data Intelligence</li>
<li></li>
<li><ol start="6" type="1">
<li>변화 관리 및 문화 조성</li>
</ol></li>
<li>6.1 데이터 중심 문화 구축</li>
<li></li>
<li>데이터 리터러시 향상</li>
<li>데이터 윤리 교육</li>
<li></li>
<li>6.2 조직 변화 관리</li>
<li></li>
<li>커뮤니케이션 전략</li>
<li>교육 및 훈련 프로그램</li>
<li></li>
<li><ol start="7" type="1">
<li>규제 및 컴플라이언스</li>
</ol></li>
<li>7.1 주요 데이터 관련 규제</li>
<li></li>
<li>GDPR (General Data Protection Regulation)</li>
<li>CCPA (California Consumer Privacy Act)</li>
<li>국내 개인정보보호법</li>
<li></li>
<li>7.2 컴플라이언스 관리</li>
<li></li>
<li>규제 요구사항 매핑</li>
<li>컴플라이언스 모니터링 및 보고</li>
<li></li>
<li><ol start="8" type="1">
<li>데이터 거버넌스 성과 측정</li>
</ol></li>
<li>8.1 핵심 성과 지표 (KPI)</li>
<li></li>
<li>데이터 품질 개선율</li>
<li>데이터 관련 의사결정 시간 단축</li>
<li>데이터 보안 사고 감소율</li>
<li></li>
<li>8.2 ROI 분석</li>
<li></li>
<li>비용 절감 효과</li>
<li>수익 증대 효과</li>
<li>리스크 감소 효과</li>
<li></li>
<li><ol start="9" type="1">
<li>향후 트렌드 및 발전 방향</li>
</ol></li>
<li>9.1 AI/ML을 활용한 데이터 거버넌스</li>
<li>9.2 클라우드 환경에서의 데이터 거버넌스</li>
<li>9.3 데이터 윤리 및 책임 있는 AI</li>
</ul>


</section>

 ]]></description>
  <guid>kmink3225.netlify.app/docs/blog/posts/Governance/list.html</guid>
  <pubDate>Wed, 07 Aug 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Governance Study - Data Architecture (구조 관리)</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Governance/architetucre.html</link>
  <description><![CDATA[ 




<section id="data-architecure" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="data-architecure"><span class="header-section-number">1</span> Data Architecure</h2>
<p>네, Graphviz를 사용하여 앞서 보여드린 예시들을 다시 만들어보겠습니다. Graphviz는 DOT 언어를 사용하여 그래프를 정의합니다.</p>
<ol type="1">
<li>엔터프라이즈 데이터 모델:</li>
</ol>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<svg width="672" height="480" viewbox="0.00 0.00 206.00 260.00" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 256)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-256 202,-256 202,4 -4,4"></polygon>
<!-- 고객 -->
<g id="node1" class="node">
<title>고객</title>
<polygon fill="none" stroke="black" points="162,-252 108,-252 108,-216 162,-216 162,-252"></polygon>
<text text-anchor="middle" x="135" y="-229.8" font-family="Times,serif" font-size="14.00">고객</text>
</g>
<!-- 주문 -->
<g id="node2" class="node">
<title>주문</title>
<polygon fill="none" stroke="black" points="126,-180 72,-180 72,-144 126,-144 126,-180"></polygon>
<text text-anchor="middle" x="99" y="-157.8" font-family="Times,serif" font-size="14.00">주문</text>
</g>
<!-- 고객&#45;&gt;주문 -->
<g id="edge1" class="edge">
<title>고객-&gt;주문</title>
<path fill="none" stroke="black" d="M126.1,-215.7C122,-207.73 117.05,-198.1 112.51,-189.26"></path>
<polygon fill="black" stroke="black" points="115.48,-187.4 107.8,-180.1 109.26,-190.6 115.48,-187.4"></polygon>
</g>
<!-- 계정 -->
<g id="node3" class="node">
<title>계정</title>
<polygon fill="none" stroke="black" points="198,-180 144,-180 144,-144 198,-144 198,-180"></polygon>
<text text-anchor="middle" x="171" y="-157.8" font-family="Times,serif" font-size="14.00">계정</text>
</g>
<!-- 고객&#45;&gt;계정 -->
<g id="edge2" class="edge">
<title>고객-&gt;계정</title>
<path fill="none" stroke="black" d="M143.9,-215.7C148,-207.73 152.95,-198.1 157.49,-189.26"></path>
<polygon fill="black" stroke="black" points="160.74,-190.6 162.2,-180.1 154.52,-187.4 160.74,-190.6"></polygon>
</g>
<!-- 제품 -->
<g id="node4" class="node">
<title>제품</title>
<polygon fill="none" stroke="black" points="54,-108 0,-108 0,-72 54,-72 54,-108"></polygon>
<text text-anchor="middle" x="27" y="-85.8" font-family="Times,serif" font-size="14.00">제품</text>
</g>
<!-- 주문&#45;&gt;제품 -->
<g id="edge3" class="edge">
<title>주문-&gt;제품</title>
<path fill="none" stroke="black" d="M81.2,-143.7C72.4,-135.14 61.62,-124.66 52,-115.3"></path>
<polygon fill="black" stroke="black" points="54.2,-112.57 44.59,-108.1 49.32,-117.58 54.2,-112.57"></polygon>
</g>
<!-- 배송 -->
<g id="node5" class="node">
<title>배송</title>
<polygon fill="none" stroke="black" points="126,-108 72,-108 72,-72 126,-72 126,-108"></polygon>
<text text-anchor="middle" x="99" y="-85.8" font-family="Times,serif" font-size="14.00">배송</text>
</g>
<!-- 주문&#45;&gt;배송 -->
<g id="edge4" class="edge">
<title>주문-&gt;배송</title>
<path fill="none" stroke="black" d="M99,-143.7C99,-135.98 99,-126.71 99,-118.11"></path>
<polygon fill="black" stroke="black" points="102.5,-118.1 99,-108.1 95.5,-118.1 102.5,-118.1"></polygon>
</g>
<!-- 청구 -->
<g id="node6" class="node">
<title>청구</title>
<polygon fill="none" stroke="black" points="198,-108 144,-108 144,-72 198,-72 198,-108"></polygon>
<text text-anchor="middle" x="171" y="-85.8" font-family="Times,serif" font-size="14.00">청구</text>
</g>
<!-- 계정&#45;&gt;청구 -->
<g id="edge5" class="edge">
<title>계정-&gt;청구</title>
<path fill="none" stroke="black" d="M171,-143.7C171,-135.98 171,-126.71 171,-118.11"></path>
<polygon fill="black" stroke="black" points="174.5,-118.1 171,-108.1 167.5,-118.1 174.5,-118.1"></polygon>
</g>
<!-- 재고 -->
<g id="node7" class="node">
<title>재고</title>
<polygon fill="none" stroke="black" points="54,-36 0,-36 0,0 54,0 54,-36"></polygon>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00">재고</text>
</g>
<!-- 제품&#45;&gt;재고 -->
<g id="edge6" class="edge">
<title>제품-&gt;재고</title>
<path fill="none" stroke="black" d="M27,-71.7C27,-63.98 27,-54.71 27,-46.11"></path>
<polygon fill="black" stroke="black" points="30.5,-46.1 27,-36.1 23.5,-46.1 30.5,-46.1"></polygon>
</g>
<!-- 물류 -->
<g id="node8" class="node">
<title>물류</title>
<polygon fill="none" stroke="black" points="126,-36 72,-36 72,0 126,0 126,-36"></polygon>
<text text-anchor="middle" x="99" y="-13.8" font-family="Times,serif" font-size="14.00">물류</text>
</g>
<!-- 배송&#45;&gt;물류 -->
<g id="edge7" class="edge">
<title>배송-&gt;물류</title>
<path fill="none" stroke="black" d="M99,-71.7C99,-63.98 99,-54.71 99,-46.11"></path>
<polygon fill="black" stroke="black" points="102.5,-46.1 99,-36.1 95.5,-46.1 102.5,-46.1"></polygon>
</g>
</g>
</svg>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<ol start="2" type="1">
<li>데이터 흐름 아키텍처:</li>
</ol>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<svg width="672" height="480" viewbox="0.00 0.00 798.50 44.00" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-40 794.5,-40 794.5,4 -4,4"></polygon>
<!-- 소스 시스템 -->
<g id="node1" class="node">
<title>소스 시스템</title>
<polygon fill="none" stroke="black" points="72,-36 0,-36 0,0 72,0 72,-36"></polygon>
<text text-anchor="middle" x="36" y="-13.8" font-family="Times,serif" font-size="14.00">소스 시스템</text>
</g>
<!-- 데이터 수집 레이어 -->
<g id="node2" class="node">
<title>데이터 수집 레이어</title>
<polygon fill="none" stroke="black" points="215,-36 108,-36 108,0 215,0 215,-36"></polygon>
<text text-anchor="middle" x="161.5" y="-13.8" font-family="Times,serif" font-size="14.00">데이터 수집 레이어</text>
</g>
<!-- 소스 시스템&#45;&gt;데이터 수집 레이어 -->
<g id="edge1" class="edge">
<title>소스 시스템-&gt;데이터 수집 레이어</title>
<path fill="none" stroke="black" d="M72.06,-18C80.06,-18 88.79,-18 97.56,-18"></path>
<polygon fill="black" stroke="black" points="97.82,-21.5 107.82,-18 97.82,-14.5 97.82,-21.5"></polygon>
</g>
<!-- 데이터 저장소 -->
<g id="node3" class="node">
<title>데이터 저장소</title>
<polygon fill="none" stroke="black" points="333.25,-36 251.25,-36 251.25,0 333.25,0 333.25,-36"></polygon>
<text text-anchor="middle" x="292.25" y="-13.8" font-family="Times,serif" font-size="14.00">데이터 저장소</text>
</g>
<!-- 데이터 수집 레이어&#45;&gt;데이터 저장소 -->
<g id="edge2" class="edge">
<title>데이터 수집 레이어-&gt;데이터 저장소</title>
<path fill="none" stroke="black" d="M215.24,-18C223.73,-18 232.5,-18 240.94,-18"></path>
<polygon fill="black" stroke="black" points="241.01,-21.5 251.01,-18 241.01,-14.5 241.01,-21.5"></polygon>
</g>
<!-- 데이터 처리 레이어 -->
<g id="node4" class="node">
<title>데이터 처리 레이어</title>
<polygon fill="none" stroke="black" points="476.5,-36 369.5,-36 369.5,0 476.5,0 476.5,-36"></polygon>
<text text-anchor="middle" x="423" y="-13.8" font-family="Times,serif" font-size="14.00">데이터 처리 레이어</text>
</g>
<!-- 데이터 저장소&#45;&gt;데이터 처리 레이어 -->
<g id="edge3" class="edge">
<title>데이터 저장소-&gt;데이터 처리 레이어</title>
<path fill="none" stroke="black" d="M333.28,-18C341.45,-18 350.24,-18 358.99,-18"></path>
<polygon fill="black" stroke="black" points="359.21,-21.5 369.21,-18 359.21,-14.5 359.21,-21.5"></polygon>
</g>
<!-- 데이터 서비스 레이어 -->
<g id="node5" class="node">
<title>데이터 서비스 레이어</title>
<polygon fill="none" stroke="black" points="629.75,-36 512.75,-36 512.75,0 629.75,0 629.75,-36"></polygon>
<text text-anchor="middle" x="571.25" y="-13.8" font-family="Times,serif" font-size="14.00">데이터 서비스 레이어</text>
</g>
<!-- 데이터 처리 레이어&#45;&gt;데이터 서비스 레이어 -->
<g id="edge4" class="edge">
<title>데이터 처리 레이어-&gt;데이터 서비스 레이어</title>
<path fill="none" stroke="black" d="M476.8,-18C485.15,-18 493.89,-18 502.52,-18"></path>
<polygon fill="black" stroke="black" points="502.58,-21.5 512.58,-18 502.58,-14.5 502.58,-21.5"></polygon>
</g>
<!-- 비즈니스 애플리케이션 -->
<g id="node6" class="node">
<title>비즈니스 애플리케이션</title>
<polygon fill="none" stroke="black" points="790.25,-36 666.25,-36 666.25,0 790.25,0 790.25,-36"></polygon>
<text text-anchor="middle" x="728.25" y="-13.8" font-family="Times,serif" font-size="14.00">비즈니스 애플리케이션</text>
</g>
<!-- 데이터 서비스 레이어&#45;&gt;비즈니스 애플리케이션 -->
<g id="edge5" class="edge">
<title>데이터 서비스 레이어-&gt;비즈니스 애플리케이션</title>
<path fill="none" stroke="black" d="M629.97,-18C638.44,-18 647.26,-18 655.96,-18"></path>
<polygon fill="black" stroke="black" points="656.11,-21.5 666.11,-18 656.11,-14.5 656.11,-21.5"></polygon>
</g>
</g>
</svg>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<ol start="3" type="1">
<li>기술 스택 아키텍처:</li>
</ol>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<svg width="672" height="480" viewbox="0.00 0.00 227.60 332.00" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 328)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-328 223.6,-328 223.6,4 -4,4"></polygon>
<!-- 데이터 소스 -->
<g id="node1" class="node">
<title>데이터 소스</title>
<polygon fill="none" stroke="black" points="83.85,-324 11.85,-324 11.85,-288 83.85,-288 83.85,-324"></polygon>
<text text-anchor="middle" x="47.85" y="-301.8" font-family="Times,serif" font-size="14.00">데이터 소스</text>
</g>
<!-- ETL/ELT 도구 -->
<g id="node2" class="node">
<title>ETL/ELT 도구</title>
<polygon fill="none" stroke="black" points="95.55,-252 0.15,-252 0.15,-216 95.55,-216 95.55,-252"></polygon>
<text text-anchor="middle" x="47.85" y="-229.8" font-family="Times,serif" font-size="14.00">ETL/ELT 도구</text>
</g>
<!-- 데이터 소스&#45;&gt;ETL/ELT 도구 -->
<g id="edge1" class="edge">
<title>데이터 소스-&gt;ETL/ELT 도구</title>
<path fill="none" stroke="black" d="M47.85,-287.7C47.85,-279.98 47.85,-270.71 47.85,-262.11"></path>
<polygon fill="black" stroke="black" points="51.35,-262.1 47.85,-252.1 44.35,-262.1 51.35,-262.1"></polygon>
</g>
<!-- 데이터 저장소 -->
<g id="node3" class="node">
<title>데이터 저장소</title>
<polygon fill="none" stroke="black" points="131.85,-180 49.85,-180 49.85,-144 131.85,-144 131.85,-180"></polygon>
<text text-anchor="middle" x="90.85" y="-157.8" font-family="Times,serif" font-size="14.00">데이터 저장소</text>
</g>
<!-- ETL/ELT 도구&#45;&gt;데이터 저장소 -->
<g id="edge2" class="edge">
<title>ETL/ELT 도구-&gt;데이터 저장소</title>
<path fill="none" stroke="black" d="M58.48,-215.7C63.48,-207.56 69.54,-197.69 75.06,-188.7"></path>
<polygon fill="black" stroke="black" points="78.09,-190.46 80.34,-180.1 72.13,-186.79 78.09,-190.46"></polygon>
</g>
<!-- 데이터 처리 엔진 -->
<g id="node4" class="node">
<title>데이터 처리 엔진</title>
<polygon fill="none" stroke="black" points="172.85,-108 76.85,-108 76.85,-72 172.85,-72 172.85,-108"></polygon>
<text text-anchor="middle" x="124.85" y="-85.8" font-family="Times,serif" font-size="14.00">데이터 처리 엔진</text>
</g>
<!-- 데이터 저장소&#45;&gt;데이터 처리 엔진 -->
<g id="edge3" class="edge">
<title>데이터 저장소-&gt;데이터 처리 엔진</title>
<path fill="none" stroke="black" d="M99.25,-143.7C103.12,-135.73 107.8,-126.1 112.09,-117.26"></path>
<polygon fill="black" stroke="black" points="115.32,-118.63 116.54,-108.1 109.02,-115.57 115.32,-118.63"></polygon>
</g>
<!-- BI 및 분석 도구 -->
<g id="node5" class="node">
<title>BI 및 분석 도구</title>
<polygon fill="none" stroke="black" points="171.35,-36 78.35,-36 78.35,0 171.35,0 171.35,-36"></polygon>
<text text-anchor="middle" x="124.85" y="-13.8" font-family="Times,serif" font-size="14.00">BI 및 분석 도구</text>
</g>
<!-- 데이터 처리 엔진&#45;&gt;BI 및 분석 도구 -->
<g id="edge4" class="edge">
<title>데이터 처리 엔진-&gt;BI 및 분석 도구</title>
<path fill="none" stroke="black" d="M124.85,-71.7C124.85,-63.98 124.85,-54.71 124.85,-46.11"></path>
<polygon fill="black" stroke="black" points="128.35,-46.1 124.85,-36.1 121.35,-46.1 128.35,-46.1"></polygon>
</g>
<!-- 데이터 카탈로그 -->
<g id="node6" class="node">
<title>데이터 카탈로그</title>
<polygon fill="none" stroke="black" points="206.35,-252 113.35,-252 113.35,-216 206.35,-216 206.35,-252"></polygon>
<text text-anchor="middle" x="159.85" y="-229.8" font-family="Times,serif" font-size="14.00">데이터 카탈로그</text>
</g>
<!-- 데이터 카탈로그&#45;&gt;데이터 저장소 -->
<g id="edge5" class="edge">
<title>데이터 카탈로그-&gt;데이터 저장소</title>
<path fill="none" stroke="black" d="M142.79,-215.7C134.35,-207.14 124.03,-196.66 114.81,-187.3"></path>
<polygon fill="black" stroke="black" points="117.22,-184.77 107.71,-180.1 112.24,-189.68 117.22,-184.77"></polygon>
</g>
<!-- 데이터 카탈로그&#45;&gt;데이터 처리 엔진 -->
<g id="edge6" class="edge">
<title>데이터 카탈로그-&gt;데이터 처리 엔진</title>
<path fill="none" stroke="black" d="M156.63,-215.84C153.14,-197.84 147.23,-168.79 140.85,-144 138.64,-135.4 135.94,-126.1 133.39,-117.73"></path>
<polygon fill="black" stroke="black" points="136.7,-116.6 130.4,-108.08 130.02,-118.67 136.7,-116.6"></polygon>
</g>
<!-- 데이터 거버넌스 도구 -->
<g id="node7" class="node">
<title>데이터 거버넌스 도구</title>
<polygon fill="none" stroke="black" points="219.35,-324 102.35,-324 102.35,-288 219.35,-288 219.35,-324"></polygon>
<text text-anchor="middle" x="160.85" y="-301.8" font-family="Times,serif" font-size="14.00">데이터 거버넌스 도구</text>
</g>
<!-- 데이터 거버넌스 도구&#45;&gt;데이터 카탈로그 -->
<g id="edge7" class="edge">
<title>데이터 거버넌스 도구-&gt;데이터 카탈로그</title>
<path fill="none" stroke="black" d="M160.6,-287.7C160.49,-279.98 160.36,-270.71 160.24,-262.11"></path>
<polygon fill="black" stroke="black" points="163.74,-262.05 160.09,-252.1 156.74,-262.15 163.74,-262.05"></polygon>
</g>
</g>
</svg>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>이 Graphviz 코드를 DOT 파일로 저장하고 Graphviz 도구를 사용하여 이미지로 렌더링할 수 있습니다. 예를 들어, 명령줄에서 다음과 같이 실행할 수 있습니다:</p>
<pre><code>dot -Tpng input.dot -o output.png</code></pre>
<p>이렇게 하면 PNG 형식의 이미지 파일이 생성됩니다.</p>
<p>Graphviz는 복잡한 그래프와 다이어그램을 생성하는 데 매우 강력한 도구입니다. 노드의 모양, 색상, 레이아웃 등을 세밀하게 조정할 수 있어 더 복잡하고 세련된 다이어그램을 만들 수 있습니다. 또한 대규모 그래프를 자동으로 레이아웃하는 데 특히 유용합니다.</p>


</section>

 ]]></description>
  <guid>kmink3225.netlify.app/docs/blog/posts/Governance/architetucre.html</guid>
  <pubDate>Thu, 01 Aug 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Governance Study</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Governance/basis.html</link>
  <description><![CDATA[ 




<section id="데이터-거버넌스-기초" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="데이터-거버넌스-기초"><span class="header-section-number">1</span> 데이터 거버넌스 기초</h2>
<ul>
<li>조직의 데이터 관리를 위한 핵심적인 프레임워크
<ul>
<li>프레임워크란?
<ul>
<li>특정 문제나 도메인에 대한 구조화된 접근 방식을 제공하는 <strong>개념</strong>적인 구조</li>
<li>문제 해결을 위한 가이드라인, 원칙, 모범 사례를 제시</li>
</ul></li>
</ul></li>
<li>조직 전체의 데이터 관리 전략과 실행 방법을 다룬다. 즉, 개념적, 전략적 접근 방식</li>
<li>최종적으로는 조직의 정책, 프로세스, 문화 등에 반영되어야 한다.</li>
</ul>
<section id="데이터-거버넌스의-정의" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="데이터-거버넌스의-정의"><span class="header-section-number">1.1</span> 데이터 거버넌스의 정의</h3>
<ul>
<li>데이터 거버넌스는 조직 내에서 데이터의 <strong>가용성, 유용성, 무결성, 보안을 보장</strong>하기 위한 정책, 절차, 표준을 수립하고 실행하는 과정이다.</li>
<li>이는 <strong>데이터를 비즈니스 자산으로 관리</strong>하고 활용하는 체계적인 접근 방식이다.</li>
<li>데이터 거버넌스 구조</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/images/governance/governance_structure.PNG" class="img-fluid figure-img"></p>
<figcaption>Data Governance Structure</figcaption>
</figure>
</div>
</section>
<section id="데이터-거버넌스의-목적" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="데이터-거버넌스의-목적"><span class="header-section-number">1.2</span> 데이터 거버넌스의 목적</h3>
<ul>
<li>데이터 품질 향상</li>
<li>데이터 보안 및 규정 준수 보장</li>
<li>의사결정 프로세스 개선</li>
<li>운영 효율성 및 생산성 증대</li>
<li>데이터 기반 혁신 촉진</li>
</ul>
</section>
<section id="데이터-거버넌스의-기대효과" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="데이터-거버넌스의-기대효과"><span class="header-section-number">1.3</span> 데이터 거버넌스의 기대효과</h3>
<p>거버넌스는 기술 구현 목적이 아니라 비즈니스 전략의 핵심 요소로 자리 잡아야 한다.</p>
<ul>
<li>데이터 품질 향상: 고품질 데이터는 정확한 분석과 신속한 비즈니스 의사결정의 기반이 된다.
<ul>
<li>잘못된 데이터로 인한 비용 감소</li>
<li>고객 만족도 증가</li>
<li>운영 효율성 개선</li>
</ul></li>
<li>규정 준수 및 리스크 관리: 데이터 관련 법규(예: GDPR, CCPA)를 준수해야 함
<ul>
<li>법적 제재 및 벌금 회피<br>
</li>
<li>기업 평판 보호<br>
</li>
<li>고객 신뢰 증진</li>
</ul></li>
<li>운영 및 개발 효율성 증가: 체계적인 데이터 관리는 업무 프로세스를 최적화
<ul>
<li>개발 생산성 형상: 표준용어와 구조 정보를 관리하여 데이터 이해도 증가</li>
<li>중복 작업 감소</li>
<li>데이터 검색 및 활용 시간 단축</li>
<li>부서간 협업 증진</li>
<li>유지보수 효율성 향상</li>
<li>평균 30~60% 이상의 비용, 공수, 기간 효율 제고</li>
<li>비즈니스 목표 달성 및 노동 생산성 향상에도 기여함</li>
</ul></li>
<li>데이터 보안 강화: 민감한 데이터를 보호하고 무단 접근을 방지해야 함
<ul>
<li>데이터 유출로 인한 손실 예방</li>
<li>고객 및 파트너 신뢰 유지</li>
<li>지적 재산권 보호</li>
</ul></li>
<li>비즈니스 인텔리전스 및 분석 개선: 일관되고 신뢰할 수 있는 데이터는 더 나은 분석을 가능하게 함
<ul>
<li>시장 트렌드 신속 파악</li>
<li>고객 인사이트 향상</li>
<li>예측 분석의 정확도 증가</li>
</ul></li>
<li>데이터 자산의 가치 극대화
<ul>
<li>데이터를 전략적 자산으로 관리</li>
<li>데이터 기반 신규 비즈니스 모델 창출</li>
<li>데이터 monetization 기회 발굴
<ul>
<li>데이터 판매: 수집한 데이터를 다른 기업이나 연구기관에 직접 판매</li>
<li>데이터 접근권 판매: API나 구독 모델을 통해 데이터 접근권을 제공</li>
<li>제품/서비스 개선: 데이터를 활용해 기존 제품이나 서비스를 개선</li>
<li>맞춤형 마케팅: 고객 데이터를 활용한 타겟 마케팅으로 매출 증대</li>
<li>운영 효율성 개선: 내부 데이터 분석을 통한 비용 절감</li>
</ul></li>
</ul></li>
<li>비용 절감: 효율적인 데이터 관리는 여러 영역에서 비용을 절감
<ul>
<li>데이터 저장 및 관리 비용 최적화</li>
<li>데이터 관련 오류 수정 비용 감소</li>
<li>중복 시스템 및 프로세스 제거</li>
</ul></li>
</ul>
</section>
<section id="핵심-구성-요소" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="핵심-구성-요소"><span class="header-section-number">1.4</span> 핵심 구성 요소</h3>
<ul>
<li>데이터 표준
<ul>
<li>데이터의 일관성을 유지하기 위한 규칙과 가이드라인</li>
</ul></li>
<li>데이터 정책
<ul>
<li>데이터 보안 및 프라이버시 정책</li>
<li>데이터 생명주기 관리 정책
<ul>
<li>데이터 흐름도와 데이터 계보(lineage) 관리를 통해 데이터의 전체 생명주기를 명확히 파악</li>
</ul></li>
</ul></li>
<li>데이터 품질 기준
<ul>
<li>데이터의 정확성, 완전성, 일관성, 시의성 등을 관리</li>
</ul></li>
<li>데이터 구조
<ul>
<li>데이터의 조직화, 저장, 관리 방식을 정의하는 아키텍처와 모델링</li>
</ul></li>
<li>조직 및 역할
<ul>
<li>데이터 거버넌스 위원회</li>
<li>데이터 소유자 (Data Owner)</li>
<li>데이터 관리자 (Data Steward)</li>
<li>데이터 사용자</li>
</ul></li>
<li>프로세스
<ul>
<li>데이터 품질 관리 프로세스</li>
<li>메타데이터 관리 프로세스</li>
<li>데이터 접근 및 공유 프로세스</li>
</ul></li>
<li>기술
<ul>
<li>데이터 표준 단어 사전</li>
<li>데이터 표준 용어 사전</li>
<li>데이터 카탈로그</li>
<li>데이터 품질 도구</li>
<li>메타데이터 관리 도구</li>
</ul></li>
<li>주요 원칙
<ul>
<li>책임성: 데이터에 대한 명확한 소유권과 책임을 정의</li>
<li>투명성: 데이터 관련 프로세스와 결정을 투명하게 관리</li>
<li>무결성: 데이터의 정확성과 일관성을 유지</li>
<li>보안: 데이터를 안전하게 보호하고 적절한 접근 제어를 실시</li>
<li>규정 준수: 관련 법규와 업계 표준을 준수</li>
<li>가용성: 필요한 사람이 필요한 시점에 데이터에 접근할 수 있도록 함</li>
<li>효율성: 데이터 관리 프로세스를 최적화하여 비용 효율성을 높임</li>
</ul></li>
<li>구현 단계
<ul>
<li>현황 평가: 현재의 데이터 관리 실태를 분석</li>
<li>전략 수립: 조직의 목표에 맞는 데이터 거버넌스 전략을 수립</li>
<li>정책 및 표준 개발: 필요한 정책과 표준을 개발</li>
<li>조직 구성: 데이터 거버넌스를 위한 조직 구조를 설계하고 역할을 할당</li>
<li>프로세스 구현: 데이터 관리 프로세스를 설계하고 구현</li>
<li>기술 도입: 필요한 데이터 관리 도구를 선택하고 도입</li>
<li>교육 및 변화 관리: 조직 구성원들에게 필요한 교육을 제공하고 변화를 관리</li>
<li>모니터링 및 개선: 지속적으로 성과를 모니터링하고 개선</li>
</ul></li>
<li>도전 과제
<ul>
<li>조직 문화 변화의 어려움</li>
<li>다양한 이해관계자 간의 조정</li>
<li>지속적인 투자와 관심 유지</li>
<li>레거시 시스템과의 통합
<ul>
<li>현실적으로는 기존의 레거시 시스템은 유지하고 차세대 시스템에 거버넌스 정책을 적용</li>
<li>레거시까지 거버넌즈 정책을 적용할 경우 실무자들의 거센 반발이 있음</li>
<li>절충안으로 mapping table을 만들어 기존 레거시와 정책이 적용된 표준화 테이블을 연결</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="데이터-비표준화-문제점" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="데이터-비표준화-문제점"><span class="header-section-number">1.5</span> 데이터 비표준화 문제점</h3>
<ul>
<li>의사결정 품질 저하
<ul>
<li>부정확하거나 불완전한 데이터로 인해 잘못된 결정을 내릴 수 있다.</li>
<li>시의적절한 데이터 접근이 어려워 기회를 놓칠 수 있다.</li>
</ul></li>
<li>운영 비효율성
<ul>
<li>중복되거나 일관성 없는 데이터로 인해 작업 시간이 증가</li>
<li>부서간 데이터 공유와 협업이 어려워진다.</li>
<li>시간이 지남에 따라 비표준화된 데이터는 계속 누적되어 악순환에 빠짐</li>
</ul></li>
<li>규정 준수 리스크 증가
<ul>
<li>데이터 관련 법규(예: GDPR, CCPA) 위반 가능성이 높아진다.</li>
<li>감사 대응이 어려워지고, 이로 인한 법적 제재나 벌금 위험이 증가</li>
</ul></li>
<li>신뢰 상실
<ul>
<li>데이터 구조와 정의가 불명확하여 데이터의 신뢰성이 떨어짐</li>
<li>부정확한 고객 데이터로 인해 서비스 품질이 저하될 수 있다.</li>
<li>데이터의 내용과 형식이 불분명하여 데이터 해석이 어렵습니다.</li>
<li>개인정보 유출 위험이 증가하여 고객 신뢰를 잃을 수 있다.</li>
</ul></li>
<li>재무적 손실
<ul>
<li>잘못된 데이터로 인한 전략적 실패로 재무적 손실이 발생할 수 있다.</li>
<li>데이터 오류 수정에 많은 비용과 시간이 소요
<ul>
<li>일관성 없는 명명 규칙으로 인해 데이터 이해와 통합이 어려워짐</li>
<li>즉, 높은 의사소통 비용과 생산성 저하</li>
</ul></li>
</ul></li>
<li>경쟁력 약화
<ul>
<li>낮은 데이터 품질로 의사결정의 정확도와 신속도가 저하됨</li>
<li>데이터 기반 혁신이 어려워져 시장에서 뒤처질 수 있다.</li>
<li>고객 인사이트 부족으로 시장 변화에 대응하기 어려움</li>
</ul></li>
<li>IT 시스템 복잡성 증가
<ul>
<li>일관성 없는 데이터 구조로 인해 시스템 통합이 어려워진다.</li>
<li>레거시 시스템 유지 비용이 증가</li>
</ul></li>
<li>데이터 보안 취약성
<ul>
<li>데이터 접근 통제가 제대로 이루어지지 않아 보안 위험이 증가</li>
<li>중요 데이터의 위치나 중요도를 파악하기 어려워 적절한 보호가 어렵다.</li>
</ul></li>
<li>분석 및 AI/ML 프로젝트 실패
<ul>
<li>데이터 통합 실패 및 부족으로 모델링 불가</li>
<li>낮은 품질의 데이터로 인해 분석 결과의 신뢰성이 떨어진다.</li>
<li>AI/ML 모델의 성능이 저하되거나 편향된 결과를 도출할 수 있다.</li>
</ul></li>
<li>조직 문화 악화
<ul>
<li>데이터에 대한 불신으로 인해 데이터 기반 문화 형성이 어렵다.</li>
<li>부서간 데이터 사일로로 인해 협업이 저해</li>
</ul></li>
<li>비즈니스 기회 상실
<ul>
<li>데이터의 전략적 가치를 활용하지 못해 새로운 비즈니스 모델 개발이 어렵다.</li>
<li>데이터 monetization 기회를 놓친다.</li>
</ul></li>
<li>리소스 낭비
<ul>
<li>중복된 데이터 저장 및 관리로 인해 불필요한 비용이 발생</li>
<li>데이터 검색과 정제에 많은 시간을 소비.
<ul>
<li>데이터의 위치와 저장 방식이 일관되지 않아 필요한 데이터를 찾기 어렵다</li>
</ul></li>
</ul></li>
<li>데이터 계보 추적 불가
<ul>
<li>데이터의 생성, 이동, 변환 과정이 불분명하여 데이터 계보 추적이 어렵다.</li>
</ul></li>
</ul>


</section>
</section>

 ]]></description>
  <guid>kmink3225.netlify.app/docs/blog/posts/Governance/basis.html</guid>
  <pubDate>Wed, 31 Jul 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>시계열 분석 기초 개념 - 정상성(stationarity)</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/time_series/basic_stationarity.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>다른 데이터와 달리, 시계열 데이터는 시간이 흐름에 따라 연속적으로 기록되며, 동일한 데이터가 반복되지 않고, 항상 새로운 데이터가 시간 축을 따라 순차적으로 추가된다는 특성이 있다. 따라서 시계열 데이터 분석은 추세, 계절성, 자기 상관성 등의 패턴을 분석하는 과정을 포함한다.</p>
<p>시계열 예측 모델은 이러한 시계열 데이터의 특성을 잘 반영하여 설계되어야 한다. 시계열 데이터의 주요 특성으로는 정상성, 비정상성, 지연, 차분, 자기 상관성, 백색 잡음 등이 있으며, 이러한 요소들을 고려한 모델링이 중요하다.</p>
</section>
<section id="정상성stationarity의-정의" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="정상성stationarity의-정의"><span class="header-section-number">2</span> 정상성(Stationarity)의 정의</h2>
<p>시계열이 정상성을 가진다는 것은 다음 조건들을 만족한다는 의미:</p>
<ul>
<li>평균이 일정, <img src="https://latex.codecogs.com/png.latex?E%5BY_t%5D%20=%20%5Cmu%20%5Cquad%20%5Ctext%7B%EB%AA%A8%EB%93%A0%20%7D%20t%20%5Ctext%7B%EC%97%90%20%EB%8C%80%ED%95%B4%7D"></li>
<li>분산이 일정, <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVar%7D(Y_t)%20=%20%5Csigma%5E2%20%5Cquad%20%5Ctext%7B%EB%AA%A8%EB%93%A0%20%7D%20t%20%5Ctext%7B%EC%97%90%20%EB%8C%80%ED%95%B4%7D"></li>
<li>공분산이 시차에만 의존하고 시간 자체에는 의존하지 않음.
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctext%7BCov%7D(Y_t,%20Y_%7Bt+k%7D)%20=%20%5Cgamma_k%20%5Cquad%20%5Ctext%7B%EB%AA%A8%EB%93%A0%20%EC%8B%9C%EA%B0%84%20%7D%20t%20%5Ctext%7B%EC%99%80%20%EC%8B%9C%EA%B0%84%20%EA%B0%84%EA%B2%A9%20%7D%20k%20%5Ctext%7B%EC%97%90%20%EB%8C%80%ED%95%B4%7D"></li>
</ul></li>
</ul>
<section id="textcovy_t-y_tk-gamma_k" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="textcovy_t-y_tk-gamma_k"><span class="header-section-number">2.1</span> <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BCov%7D(Y_t,%20Y_%7Bt+k%7D)%20=%20%5Cgamma_k"></h3>
<p>두 시점 사이의 관계가 그 사이의 간격(시차)에만 영향을 받고, 실제 시간 위치는 중요하지 않다는 의미다. 특정 시점에서의 값이 그 시점 이후의 값들과 얼마나 상관관계가 있는지를 측정할 때 그 상관관계가 시간 <img src="https://latex.codecogs.com/png.latex?t"> 의 특정 위치와 무관하다는 의미이다. 다시 말해, 공분산이 <img src="https://latex.codecogs.com/png.latex?t"> 에 따라 변하지 않고 오직 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에만 의존한다는 뜻</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Python</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">R</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시계열 데이터 생성</span></span>
<span id="cb1-6">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-7">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>  </span>
<span id="cb1-8">lags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시차의 최대값</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AR(1) 생성 (phi = 0.8)</span></span>
<span id="cb1-11">phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb1-12">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(n)</span>
<span id="cb1-13">epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># white noise</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n):</span>
<span id="cb1-16">    y[t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y[t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon[t]</span>
<span id="cb1-17"></span>
<span id="cb1-18">covariances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [np.cov(y[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>k], y[k:])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, lags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb1-19"></span>
<span id="cb1-20">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb1-21">plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, lags <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), covariances, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;BarContainer object of 20 artists&gt;</code></pre>
</div>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Covariance as a Function of Lag (Cov(Yt, Yt+k) = γk)'</span>)</span>
<span id="cb3-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lag (k)'</span>)</span>
<span id="cb3-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Covariance (γk)'</span>)</span>
<span id="cb3-4">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-5">plt.show()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/time_series/basic_stationarity_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reshape2)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시계열 데이터 생성</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-7">lags <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시차의 최대값</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AR(1) 생성 (phi = 0.8)</span></span>
<span id="cb4-10">phi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb4-11">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(n)</span>
<span id="cb4-12">epsilon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># white noise</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n) {</span>
<span id="cb4-15">  y[t] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y[t <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon[t]</span>
<span id="cb4-16">}</span>
<span id="cb4-17"></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 공분산 계산</span></span>
<span id="cb4-19">covariances <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lags, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(k) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(y[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>k)], y[(k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n]))</span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프 그리기</span></span>
<span id="cb4-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barplot</span>(covariances, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names.arg =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lags, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, </span>
<span id="cb4-23">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariance as a Function of Lag (Cov(Yt, Yt+k) = γk)"</span>,</span>
<span id="cb4-24">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag (k)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariance (γk)"</span>)</span>
<span id="cb4-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid</span>()</span>
<span id="cb4-26"></span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시점 t 선택 (여기서는 예시로 여러 개의 t를 선택하여 비교)</span></span>
<span id="cb4-28">time_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)</span>
<span id="cb4-29">max_lag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>  </span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 시점 t에서 공분산 계산</span></span>
<span id="cb4-32">covariances_per_t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Lag =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>max_lag)</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> time_points) {</span>
<span id="cb4-35">  covariances <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(max_lag)</span>
<span id="cb4-36">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (k <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>max_lag) {</span>
<span id="cb4-37">    covariances[k] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cov</span>(y[t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>max_lag<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)], y[(t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>max_lag<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)])</span>
<span id="cb4-38">  }</span>
<span id="cb4-39">  covariances_per_t[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t_"</span>, t)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> covariances</span>
<span id="cb4-40">}</span>
<span id="cb4-41"></span>
<span id="cb4-42">covariances_long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">melt</span>(covariances_per_t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id.vars =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariance"</span>)</span>
<span id="cb4-43"></span>
<span id="cb4-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb4-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(covariances_long, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Lag, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Covariance, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> Time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariance as a Function of Lag for Different Time Points"</span>,</span>
<span id="cb4-49">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lag (k)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Covariance (γk)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-51">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details>
</div>
</div>
</div>
</div>
<ul>
<li>그래프에서 볼 수 있듯이, 특정 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에서의 공분산 값은 모든 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에 대해 동일한 패턴을 보인다. 이 같은 특성은 흔히 <strong>정상 시계열</strong> 이라고 불리며, 이는 시계열 데이터가 시간에 따른 일정한 통계적 특성을 갖고 있음을 의미한다.</li>
<li><strong>시차(Lag)에 대한 의존성</strong>
<ul>
<li>시차 <img src="https://latex.codecogs.com/png.latex?k"> 가 증가할수록 공분산의 값이 점차 감소하는 패턴을 보이고 있다. 이는 <img src="https://latex.codecogs.com/png.latex?k"> 가 커질수록 시계열 데이터가 더 멀리 떨어진 시점과의 상관관계가 줄어든다는 것을 의미한다.</li>
</ul></li>
<li><strong>시간 <img src="https://latex.codecogs.com/png.latex?t"> 에 대한 독립성</strong>
<ul>
<li>공분산이 특정 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 대해서만 달라지고, 시간 <img src="https://latex.codecogs.com/png.latex?t"> 자체에는 의존하지 않음을 의미. 즉, 동일한 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 대해 어느 시간 <img src="https://latex.codecogs.com/png.latex?t"> 에서 계산하든 동일한 공분산 값을 가진다.</li>
<li>이를 그래프에서 직접적으로 확인하기는 어렵지만, 중요한 점은 <strong>모든 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 대해 공분산이 일정한 패턴(감소하는 경향)을 유지하고 있다는 것</strong>. 이는 시계열 데이터가 시간에 따라 변화하지 않는 정상성을 갖고 있음을 암시한다.</li>
<li>공분산이 시간 <img src="https://latex.codecogs.com/png.latex?t"> 에 의존하지 않는다는 것은, <strong>어느 시점에서 시작하든 동일한 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 대한 공분산 값이 동일한 패턴을 보여야 한다</strong>는 것이다. 즉, 공분산 값의 감소 패턴은 특정 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에 국한되지 않고, 모든 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에 대해 동일하게 나타난다는 뜻이다.</li>
</ul></li>
<li>그래서, 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 따라 공분산이 감소하는 것은, 특정한 시점에서만 나타나는 현상이 아니라, 모든 시점에서 동일하게 나타나는 패턴이라는 것이다. 이 때문에 공분산이 시간 <img src="https://latex.codecogs.com/png.latex?t"> 에 의존하지 않는다고 할 수 있다.</li>
<li>그래프에서 시점 <img src="https://latex.codecogs.com/png.latex?t"> 가 달라져도 동일한 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 대해 공분산이 같은 감소 패턴을 보인다는 점에서, 공분산이 시간 자체에는 의존하지 않고 시차에만 의존한다는 사실을 확인할 수 있다.</li>
<li>특정 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에서만 계산한 것이 아니라, 모든 시점 <img src="https://latex.codecogs.com/png.latex?t"> 를 반영하여 계산된 공분산의 평균값이다.</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시점 t 선택</span></span>
<span id="cb5-3">time_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>]</span>
<span id="cb5-4">max_lag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 최대 시차를 줄여 데이터 길이 문제 해결</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 각 시점 t에서 공분산 계산</span></span>
<span id="cb5-7">covariances_per_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb5-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> time_points:</span>
<span id="cb5-9">    covariances_per_t[t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [np.cov(y[t:t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>max_lag], y[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k:t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>max_lag])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_lag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화</span></span>
<span id="cb5-12">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> time_points:</span>
<span id="cb5-15">    plt.plot(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_lag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), covariances_per_t[t], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f't=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/time_series/basic_stationarity_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="1152"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>위의 그래프는 여러 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에서 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 따른 공분산 값을 보여준다.</li>
<li>서로 다른 시점 <img src="https://latex.codecogs.com/png.latex?t"> 에 대해서도 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에 따른 공분산 값은 거의 동일한 패턴을 보인다. 이는 공분산이 시간 <img src="https://latex.codecogs.com/png.latex?t"> 에 의존하지 않고 시차 <img src="https://latex.codecogs.com/png.latex?k"> 에만 의존한다는 것을 의미한다.</li>
</ul>
</section>
</section>
<section id="정상성의-중요성" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="정상성의-중요성"><span class="header-section-number">3</span> 정상성의 중요성</h2>
<ul>
<li>많은 시계열 모델(ARMA 포함)은 정상성을 가정한다.</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"></span>
<span id="cb6-2">np.random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-3">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> </span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정상성을 갖는 시계열: AR(1) (phi = 0.8)</span></span>
<span id="cb6-6">phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb6-7">y_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(n)</span>
<span id="cb6-8">epsilon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 백색잡음</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n):</span>
<span id="cb6-11">    y_stationary[t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> phi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y_stationary[t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon[t]</span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 정상성을 갖지 않는 시계열 (예: 랜덤워크)</span></span>
<span id="cb6-14">y_non_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(n)</span>
<span id="cb6-15">epsilon_non_stationary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 백색잡음</span></span>
<span id="cb6-16"></span>
<span id="cb6-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n):</span>
<span id="cb6-18">    y_non_stationary[t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_non_stationary[t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> epsilon_non_stationary[t]</span>
<span id="cb6-19"></span>
<span id="cb6-20"></span>
<span id="cb6-21">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb6-22"></span>
<span id="cb6-23">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-24">plt.plot(y_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Stationary Time Series (AR(1))'</span>)</span>
<span id="cb6-25">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Stationary Time Series'</span>)</span>
<span id="cb6-26">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>)</span>
<span id="cb6-27">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Value'</span>)</span>
<span id="cb6-28">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-29">plt.legend()</span>
<span id="cb6-30"></span>
<span id="cb6-31">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-32">plt.plot(y_non_stationary, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Non-Stationary Time Series (Random Walk)'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>)</span>
<span id="cb6-33">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Non-Stationary Time Series'</span>)</span>
<span id="cb6-34">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time'</span>)</span>
<span id="cb6-35">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Value'</span>)</span>
<span id="cb6-36">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-37">plt.legend()</span>
<span id="cb6-38"></span>
<span id="cb6-39">plt.tight_layout()</span>
<span id="cb6-40">plt.show()</span></code></pre></div>
</details>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/time_series/basic_stationarity_files/figure-html/unnamed-chunk-4-3.png" class="img-fluid figure-img" width="1344"></p>
</figure>
</div>
</div>
</div>
<ul>
<li><strong>정상성을 갖는 시계열 (Stationary Time Series)</strong>:
<ul>
<li>왼쪽 그래프는 AR(1) 프로세스에 의해 생성된 정상성을 갖는 시계열. 이 시계열은 평균과 분산이 시간에 따라 일정하게 유지된다. 즉, 데이터의 변동이 시간에 따라 크게 변화하지 않고 상대적으로 일정한 패턴을 보인다.</li>
</ul></li>
<li><strong>정상성을 갖지 않는 시계열 (Non-Stationary Time Series)</strong>:
<ul>
<li>오른쪽 그래프는 랜덤 워크(Random Walk)에 의해 생성된 정상성을 갖지 않는 시계열. 이 시계열은 시간에 따라 평균이나 분산이 변하는 경향을 보이며, 데이터가 시간이 지남에 따라 특정 방향으로 이동하거나 더 넓은 범위로 퍼진다.<br>
</li>
</ul></li>
<li>정상성을 가진 데이터는 예측이 더 쉽고 신뢰할 수 있다.</li>
<li>비정상 시계열은 과거 패턴이 미래에 그대로 적용되지 않을 수 있어 예측이 어렵다.</li>
</ul>
</section>
<section id="정상성-검정" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="정상성-검정"><span class="header-section-number">4</span> 정상성 검정</h2>
<ul>
<li>시각적 검사: (정성적 방법) 시계열 플롯, ACF(자기상관함수) plot 등을 통해 대략적으로 파악</li>
<li>통계적 검정: (정량적 방법) Augmented Dickey-Fuller 검정, KPSS 검정 등</li>
</ul>
</section>
<section id="비정상-시계열의-정상화-방법" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="비정상-시계열의-정상화-방법"><span class="header-section-number">5</span> 비정상 시계열의 정상화 방법</h2>
<ul>
<li>차분(Differencing): 연속된 관측값의 차이를 구함</li>
<li>로그 변환: 지수적 증가 추세를 선형화</li>
<li>계절성 조정: 계절적 패턴 제거</li>
</ul>
</section>
<section id="약정상성-weak-stationarity-vs-강정상성-strong-stationarity" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="약정상성-weak-stationarity-vs-강정상성-strong-stationarity"><span class="header-section-number">6</span> 약정상성 (Weak Stationarity) vs 강정상성 (Strong Stationarity)</h2>
<ul>
<li>약정상성
<ul>
<li>정상성의 정의를 만족</li>
<li>약 정상성은 시계열의 기본적인 통계적 특성인 평균과 분산, 공분산이 시간에 따라 변하지 않도록 요구하는데, 이는 주로 선형 모델이나 통계적 분석에서 주로 사용된다.</li>
</ul></li>
<li>강정상성
<ul>
<li>모든 차수의 결합 확률 분포가 시간에 따라 불변</li>
</ul></li>
</ul>
<ol start="6" type="1">
<li>실제 응용:
<ul>
<li>경제 지표, 주가, 기상 데이터 등 많은 실제 시계열은 비정상적입니다.</li>
<li>이러한 데이터는 적절한 변환을 통해 정상화한 후 분석합니다.</li>
</ul></li>
</ol>
<p>정상성은 시계열 모델의 기본 가정이며, 데이터의 특성을 이해하고 적절한 모델을 선택하는 데 중요한 역할을 합니다.</p>


</section>

 ]]></description>
  <guid>kmink3225.netlify.app/docs/blog/posts/time_series/basic_stationarity.html</guid>
  <pubDate>Sun, 07 Jul 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Time Series (시계열) Data Analysis</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/time_series/</link>
  <description><![CDATA[ 




<section id="시계열-stduy-목차" class="level2" data-number="1">

<ul>
<li>시계열 데이터란?
<ul>
<li>시간에 따른 관측값의 순서</li>
<li>시간 간격의 중요성 (일별, 월별, 분기별 등)</li>
</ul></li>
<li>시계열 데이터의 특성
<ul>
<li>시간 독립변수</li>
<li>자기 상관 관계 (Autocorrelation)</li>
<li>추세(Trend)</li>
<li>계절성(Seasonality)</li>
<li>주기성(Cyclical)</li>
<li>불규칙 요소(Irregular component)</li>
</ul></li>
<li>시계열 데이터의 시각화
<ul>
<li>선 그래프 (Line Plot): 시간에 따른 데이터의 변화를 연속적인 선으로 표현</li>
<li>영역 그래프 (Area Plot): 여러 시계열을 누적하여 표현할 때 유용</li>
<li>막대 그래프 (Bar Plot): 각 시점의 값을 막대로 표현, 불연속적인 시계열이나 빈도 데이터에 적합</li>
<li>캔들스틱 차트 (Candlestick Chart): 시가, 고가, 저가, 종가를 한 번에 표현</li>
<li>히트맵 (Heatmap): 여러 변수나 범주의 시계열을 동시에 비교할 때 유용</li>
<li>상자 그림 (Box Plot): 시간 구간별 데이터의 분포를 요약하여 표현, 이상치 탐지에 유용</li>
<li>산점도 (Scatter Plot): 두 시계열 변수 간의 관계를 표현, 상관관계나 패턴을 파악하는 데 유용</li>
<li>자기상관 그림 (Autocorrelation Plot): ACF, PACF를 시각화, 시계열의 자기상관 구조를 파악하는 데 사용</li>
<li>계절성 분해 그래프 (Seasonal Decomposition Plot): 시계열을 트렌드, 계절성, 잔차로 분해하여 표현</li>
<li>스펙트럼 분석 그래프 (Spectral Analysis Plot): 시계열의 주기성을 주파수 도메인에서 분석</li>
<li>워터폴 차트 (Waterfall Chart): 시간에 따른 누적 변화를 단계별로 표현</li>
<li>리플 그래프 (Ridge Plot): 여러 분포를 시간에 따라 중첩하여 표현, 분포의 변화를 시각적으로 파악하기 좋음</li>
</ul></li>
<li>시계열 데이터의 처리
<ul>
<li>시간 정보 추출</li>
<li>시간 기간 연산</li>
<li>시간 반올림</li>
<li>시간 그룹핑 (주간, 월간 합계 또는 평균)</li>
<li>시간 저가 고가 종가 (OHLC)</li>
<li>시간 롤링 (3일 평균, 5일 합계)</li>
<li>필터링</li>
<li>기간별 증감량</li>
<li>기간별 비중 백분율</li>
<li>기간별 누적 합계</li>
<li>동 기간별 plot</li>
<li>결측치 처리 (Handling Missing Values)
<ul>
<li>선형 보간법 (Linear Interpolation)</li>
<li>전방/후방 채우기 (Forward/Backward Fill)</li>
<li>평균/중앙값 대체 (Mean/Median Imputation)</li>
<li>시계열 예측 모델을 이용한 대체</li>
</ul></li>
<li>이상치 처리 (Outlier Detection and Treatment)
<ul>
<li>Z-score 방법</li>
<li>IQR (Interquartile Range) 방법</li>
<li>이동 평균을 이용한 방법</li>
<li>시계열 분해를 이용한 방법</li>
</ul></li>
<li>정규화 및 표준화 (Normalization and Standardization)
<ul>
<li>Min-Max 정규화</li>
<li>Z-score 표준화</li>
<li>로그 변환 (Log Transformation)</li>
</ul></li>
<li>리샘플링 (Resampling)
<ul>
<li>업샘플링 (Upsampling): 더 높은 빈도로 변환</li>
<li>다운샘플링 (Downsampling): 더 낮은 빈도로 변환</li>
</ul></li>
<li>시간 정렬 (Time Alignment)
<ul>
<li>시간대 조정</li>
<li>날짜/시간 형식 통일</li>
</ul></li>
<li>차분 (Differencing)
<ul>
<li>1차 차분</li>
<li>계절 차분</li>
</ul></li>
<li>이동 평균 (Moving Average)
<ul>
<li>단순 이동 평균</li>
<li>가중 이동 평균</li>
<li>지수 이동 평균</li>
</ul></li>
<li>윈도잉 (Windowing)
<ul>
<li>고정 윈도우</li>
<li>슬라이딩 윈도우</li>
</ul></li>
<li>트렌드 제거 (Detrending)
<ul>
<li>선형 트렌드 제거</li>
<li>비선형 트렌드 제거</li>
</ul></li>
<li>계절성 조정 (Seasonal Adjustment)
<ul>
<li>계절 분해</li>
<li>X-11, X-12-ARIMA 방법</li>
</ul></li>
<li>주기성 변환 (Periodicity Transformation)
<ul>
<li>푸리에 변환 (Fourier Transform)</li>
<li>웨이블릿 변환 (Wavelet Transform)</li>
</ul></li>
<li>특성 추출 (Feature Extraction)
<ul>
<li>통계적 특성 (평균, 분산, 왜도, 첨도 등)</li>
<li>주파수 도메인 특성</li>
<li>시간 도메인 특성</li>
</ul></li>
<li>차원 축소 (Dimensionality Reduction)
<ul>
<li>주성분 분석 (PCA)</li>
<li>동적 시간 워핑 (DTW)</li>
</ul></li>
<li>데이터 증강 (Data Augmentation)
<ul>
<li>시간 이동 (Time Shifting)</li>
<li>스케일링 (Scaling)</li>
<li>노이즈 추가 (Adding Noise)</li>
</ul></li>
</ul></li>
<li>시계열 데이터 기초 개념
<ul>
<li>정상성(stationarity)과 비정상성(non-stationarity)</li>
<li>지연과 차분 (Lag and Differencing)</li>
<li>ACF와 PACF (ACF and PACF - Autocorrelation Function and Partial Autocorrelation Function)</li>
<li>적합값과 잔차 (Fitted Values and Residuals)</li>
<li>백색잡음 (White Noise)</li>
<li>시계열 분해 (Time Series Decomposition)</li>
<li>정상성 테스트 (Stationarity Test)</li>
<li>계절성 검정 (Seasonality Test)</li>
</ul></li>
<li>시계열 예측 모델
<ul>
<li>단순 모델 (Simple Models)
<ul>
<li>단순 평균 (Simple Average)</li>
<li>나이브 방법 (Naive Method)</li>
<li>계절성 나이브 방법 (Seasonal Naive Method)</li>
<li>드리프트 방법 (Drift Method)</li>
</ul></li>
<li>지수 평활법 (Exponential Smoothing)
<ul>
<li>단순 지수 평활법 (Simple Exponential Smoothing)</li>
<li>홀트의 선형 추세 방법 (Holt’s Linear Trend Method)</li>
<li>홀트-윈터스 방법 (Holt-Winters Method)</li>
</ul></li>
<li>회귀 기반 모델 (Regression-based Models)
<ul>
<li>선형 회귀 (Linear Regression)</li>
<li>다항 회귀 (Polynomial Regression)</li>
<li>동적 회귀 (Dynamic Regression)</li>
</ul></li>
<li>자기회귀 모델 (Autoregressive Models)
<ul>
<li>AR (AutoRegressive) 모델</li>
<li>MA (Moving Average) 모델</li>
<li>ARMA (AutoRegressive Moving Average) 모델</li>
<li>ARIMA (AutoRegressive Integrated Moving Average) 모델</li>
<li>SARIMA (Seasonal ARIMA) 모델</li>
<li>ARIMAX (ARIMA with eXogenous variables) 모델</li>
</ul></li>
<li>고급 통계 모델 (Advanced Statistical Models)
<ul>
<li>VAR (Vector AutoRegression)</li>
<li>VARMA (Vector AutoRegressive Moving Average)</li>
<li>GARCH (Generalized AutoRegressive Conditional Heteroskedasticity)</li>
<li>상태 공간 모델 (State Space Models)</li>
</ul></li>
<li>기계학습 모델 (Machine Learning Models)
<ul>
<li>랜덤 포레스트 (Random Forest)</li>
<li>서포트 벡터 머신 (Support Vector Machine)</li>
<li>K-최근접 이웃 (K-Nearest Neighbors)</li>
<li>그래디언트 부스팅 (Gradient Boosting)</li>
</ul></li>
<li>딥러닝 모델 (Deep Learning Models)
<ul>
<li>RNN (Recurrent Neural Networks)</li>
<li>LSTM (Long Short-Term Memory)</li>
<li>GRU (Gated Recurrent Units)</li>
<li>CNN (Convolutional Neural Networks) for Time Series</li>
<li>Transformer 모델</li>
</ul></li>
<li>혼합 및 앙상블 모델 (Hybrid and Ensemble Models)
<ul>
<li>TBATS (Trigonometric, Box-Cox transform, ARMA errors, Trend, and Seasonal components)</li>
<li>Prophet (Facebook’s Time Series Forecasting Model)</li>
<li>앙상블 방법 (여러 모델의 조합)</li>
</ul></li>
<li>베이지안 모델 (Bayesian Models)
<ul>
<li>베이지안 구조적 시계열 모델 (Bayesian Structural Time Series)</li>
<li>동적 선형 모델 (Dynamic Linear Models)</li>
</ul></li>
<li>특수 목적 모델 (Specialized Models)
<ul>
<li>크로스 섹션 시계열 모델 (Cross-sectional Time Series Models)</li>
<li>계층적 시계열 모델 (Hierarchical Time Series Models)</li>
<li>간헐적 수요 예측 모델 (Intermittent Demand Forecasting Models)</li>
</ul></li>
</ul></li>
<li>시계열 분석 frameworks
<ul>
<li>통계 기반 프레임워크
<ul>
<li>statsmodels (Python)</li>
<li>forecast (R)</li>
<li>SPSS Time Series Modeler</li>
</ul></li>
<li>머신러닝 기반 프레임워크
<ul>
<li>scikit-learn (Python)</li>
<li>MLlib (Apache Spark)</li>
<li>H2O.ai</li>
</ul></li>
<li>딥러닝 기반 프레임워크
<ul>
<li>TensorFlow (Google)</li>
<li>PyTorch (Facebook)</li>
<li>Keras</li>
</ul></li>
<li>시계열 특화 프레임워크
<ul>
<li>Prophet (Facebook)</li>
<li>tslearn (Python)</li>
<li>tsfresh (Python)</li>
</ul></li>
<li>통합 분석 플랫폼
<ul>
<li>Darts (Python)</li>
<li>GluonTS (Amazon)</li>
<li>Kats (Facebook)</li>
</ul></li>
<li>비즈니스 인텔리전스 도구
<ul>
<li>Tableau</li>
<li>Power BI (Microsoft)</li>
<li>QlikView</li>
</ul></li>
<li>클라우드 기반 서비스
<ul>
<li>Amazon Forecast</li>
<li>Google Cloud AI Platform</li>
<li>Azure Time Series Insights</li>
</ul></li>
<li>특수 목적 프레임워크
<ul>
<li>pmdarima (Python, ARIMA 모델링)</li>
<li>PyFlux (Python, 베이지안 추론)</li>
<li>BEAST (R, 베이지안 시계열 분석)</li>
</ul></li>
<li>실시간 처리 프레임워크
<ul>
<li>Apache Flink</li>
<li>Apache Kafka Streams</li>
<li>Streamz (Python)</li>
</ul></li>
<li>시각화 특화 프레임워크
<ul>
<li>Plotly</li>
<li>Bokeh</li>
<li>Altair</li>
</ul></li>
</ul></li>
</ul>


</section>

 ]]></description>
  <guid>kmink3225.netlify.app/docs/blog/posts/time_series/</guid>
  <pubDate>Sun, 07 Jul 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>OCR</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/image_process/03.operator_basic.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="dag-basic" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> DAG Basic</h1>
<pre class="{markdown}"><code>from PIL import Image
import pytesseract

# Load the image from file
image_path = '/mnt/data/캡처.PNG'
image = Image.open(image_path)

# Perform OCR using tesseract
extracted_text = pytesseract.image_to_string(image, lang='kor')

extracted_text
</code></pre>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/image_process/03.operator_basic.html</guid>
  <pubDate>Thu, 14 Mar 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Linux_Error_Fix_rm_cannot_remove_files_busy</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/Linux/rm_cannot_remove_files.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="error" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Error</h1>
<p><code>rm: cannot remove 'files': Device or resource busy</code></p>
</section>
<section id="how-to-solve" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> How to Solve</h1>
<ul>
<li>파일이나 디렉토리를 사용 중인 프로세스 식별: <code>lsof</code> 명령어를 사용하여 어떤 프로세스가 파일이나 디렉토리를 사용하고 있는지 찾을 수 있다. 명령어는 <code>lsof | grep 'files'</code> 실행. 이렇게 하면 삭제하려는 항목을 사용하고 있는 프로세스가 나열된다.</li>
<li>프로세스 종료: 파일이나 디렉토리를 사용하는 프로세스를 찾았다면, 적절한 방법(예: 파일을 사용하는 프로그램 종료)으로 그 프로세스를 정상적으로 종료할 수 있다. 만약 그것이 불가능하거나 프로세스가 응답하지 않는 경우, 프로세스 ID 뒤에 <code>kill</code> 명령어를 사용하여 강제로 종료할 수 있다. 이 방법을 사용할 때는 데이터 손실이나 시스템 불안정을 초래할 수 있으므로 주의해야 함.</li>
<li>파일 시스템 마운트 해제: 디렉토리가 마운트된 파일 시스템의 일부라면, 삭제하기 전에 마운트를 해제해야 할 수 있다. 마운트 지점이나 장치 이름 뒤에 <code>umount</code> 명령어를 사용. 마운트 해제하기 전에 어떤 프로세스도 파일 시스템을 사용하고 있지 않은지 확인.</li>
</ul>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/Linux/rm_cannot_remove_files.html</guid>
  <pubDate>Wed, 24 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Visitor Tracking</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/web/visitor_trancking.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="visitor-tracking-방문자-추적" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Visitor Tracking (방문자 추적)</h1>
<section id="google-analytics-활용" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="google-analytics-활용"><span class="header-section-number">1.1</span> Google Analytics 활용</h2>
<p>Quarto를 사용하여 만든 기술 블로그 웹사이트의 방문자 수를 추적하려면, 일반적으로 웹 분석 도구를 사용해야한다. 가장 널리 사용되는 도구 중 하나는 Google Analytics인데. Google Analytics를 사용하면 사이트 방문자 수, 페이지 뷰, 사용자 행동 등 다양한 통계를 확인할 수 있다.</p>
</section>
<section id="integrating-google-analytics-into-a-quarto-website" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="integrating-google-analytics-into-a-quarto-website"><span class="header-section-number">1.2</span> Integrating Google Analytics into a Quarto Website</h2>
<ul>
<li>Google Analytics 계정 생성 및 설정
<ul>
<li>Google Analytics 계정 생성 <a href="https://marketingplatform.google.com/about/analytics/">링크</a></li>
<li>새로운 프로퍼티(Property)를 생성 <a href="https://support.google.com/sites/answer/97459">링크</a><br>
</li>
<li>웹사이트에 대한 정보를 입력하고 추적 ID를 수령</li>
</ul></li>
<li>추적 코드를 웹사이트에 추가
<ul>
<li>Google Analytics에서 제공하는 추적 코드를 복사</li>
<li>Quarto 웹사이트의 HTML 템플릿에 이 추적 코드를 추가</li>
<li>이 코드는 보통

태그 안에 넣음</li>
</ul></li>
<li>Quarto 프로젝트에 코드 추가
<ul>
<li>Quarto 프로젝트의 _quarto.yml 파일이나 해당 HTML 템플릿 파일에 Google Analytics 스크립트를 추가</li>
</ul></li>
<li>웹사이트 업데이트 및 배포
<ul>
<li>rendering을 하여 변경사항을 웹사이트에 적용하고 재배포</li>
</ul></li>
<li>Google Analytics에서 데이터 확인
<ul>
<li>Google Analytics Dashboard에서 웹사이트의 트래픽과 관련 데이터를 확인</li>
</ul></li>
</ul>
<p><a href="https://quarto.org/docs/websites/website-tools.html#google-analytics">참고: quarto official website &gt;&gt; guide &gt;&gt; websites &gt;&gt; webiste tools</a></p>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/web/visitor_trancking.html</guid>
  <pubDate>Wed, 24 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Website Monetization</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/web/website_monetization.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="website-monetization-수익화" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Website Monetization (수익화)</h1>
<section id="google-adsense-활용" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="google-adsense-활용"><span class="header-section-number">1.1</span> Google AdSense 활용</h2>
<ul>
<li>Google AdSense 계정 생성 및 승인 받기
<ul>
<li>Google AdSense 웹사이트에 방문하여 계정을 만듭니다.</li>
<li>계정이 승인되기를 기다린다 (이 과정은 몇 일이 걸릴 수 있음)</li>
</ul></li>
<li>AdSense 코드 생성
<ul>
<li>Google AdSense 계정이 승인되면, 광고를 생성하고 광고 코드를 받는다.</li>
<li>‘광고’ 섹션에서 새 광고 단위를 생성하고, 광고 스타일과 크기를 설정</li>
<li>생성된 광고 코드를 복사</li>
</ul></li>
<li>Quarto 웹사이트에 코드 추가
<ul>
<li>Quarto 프로젝트의 해당 HTML 파일을 연다.</li>
<li>보통은 _output.yml 파일이나, 특정 레이아웃 파일일 수 있다.</li>
<li>HTML의

태그 안에 AdSense 코드를 붙여넣는다. 이는 전역적으로 광고를 관리하기 위함이다.</li>
<li>또는, 특정 페이지나 섹션에 광고를 표시하고 싶다면 해당 위치에 광고 코드를 삽입</li>
</ul></li>
<li>웹사이트 업데이트 및 배포
<ul>
<li>변경 사항을 저장하고 웹사이트를 다시 배포</li>
<li>일정 시간이 지나면, 웹사이트에 광고가 표시되기 시작</li>
</ul></li>
<li>성능 모니터링
<ul>
<li>Google AdSense 계정에서 광고 성능을 주기적으로 확인</li>
<li>광고 위치나 스타일을 조정하여 최적화할 수 있다.</li>
</ul></li>
</ul>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/web/website_monetization.html</guid>
  <pubDate>Wed, 24 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Public Data</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/public_data/</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="public-data" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Public data</h1>
<section id="topic" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="topic"><span class="header-section-number">1.1</span> Topic</h2>
<ul>
<li>Government and Health Data: datasets related to sociology, economic development, education, health care, and more. datasets from the Indian Government, European Union, UK Government, US Government, and US Bureau of Labor Statistics are typically well-maintained and comprehensive.</li>
<li>Socioeconomic Data by World Bodies: Organizations like the United Nations, UNICEF, World Health Organization, World Bank, IMF, and the Asian Development Bank provide extensive datasets.</li>
<li>Financial Data: Datasets from the National Stock Exchange of India, Reserve Bank of India, NASDAQ, and the New York Stock Exchange offer historical trading data (time-series analysis, stock market trends, and algorithmic trading models).</li>
<li>Computer Vision Datasets: datasets like ImageNet, COCO, Google’s Open Image Dataset, and LSUN.</li>
<li>Natural Language Processing (NLP) Datasets: datasets for voice and speech recognition, language translation, and other linguistics-related tasks</li>
</ul>
</section>
<section id="api" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="api"><span class="header-section-number">1.2</span> API</h2>
<ul>
<li>Google Cloud Datasets: datasets hosted on Google Cloud</li>
<li>Microsoft Azure Open Datasets: their curated datasets working within the Azure ecosystem for your machine learning projects.</li>
<li>Kaggle: data for its machine learning competitions</li>
<li>US Government’s Data (data.gov): the US government data.</li>
<li>World Bank Data: economic and development datasets.</li>
<li>Quandl: financial and economic dataset (time-series data)</li>
</ul>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/public_data/</guid>
  <pubDate>Sun, 31 Dec 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Conceptual Data Modeling</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/conceptual_data_modeling.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="database-system" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Database System</h1>
<section id="database의-주요-구성-요소" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="database의-주요-구성-요소"><span class="header-section-number">1.1</span> Database의 주요 구성 요소</h2>
<section id="데이터-실제로-저장되는-정보로-예를-들어-고객-정보-주문-내역-제품-세부-사항-등이-있다." class="level3" data-number="1.1.1">
<h3 data-number="1.1.1" class="anchored" data-anchor-id="데이터-실제로-저장되는-정보로-예를-들어-고객-정보-주문-내역-제품-세부-사항-등이-있다."><span class="header-section-number">1.1.1</span> 데이터: 실제로 저장되는 정보로, 예를 들어 고객 정보, 주문 내역, 제품 세부 사항 등이 있다.</h3>
</section>
<section id="스키마schema-데이터베이스의-구조를-정의하는-청사진으로-테이블-열-데이터-타입-제약-조건-등을-포함." class="level3" data-number="1.1.2">
<h3 data-number="1.1.2" class="anchored" data-anchor-id="스키마schema-데이터베이스의-구조를-정의하는-청사진으로-테이블-열-데이터-타입-제약-조건-등을-포함."><span class="header-section-number">1.1.2</span> 스키마(Schema): 데이터베이스의 구조를 정의하는 청사진으로, 테이블, 열, 데이터 타입, 제약 조건 등을 포함.</h3>
</section>
<section id="dbms-database-management-system-데이터베이스를-관리하고-조작하는-소프트웨어-시스템으로-데이터-저장-검색-수정-삭제-등의-기능을-제공합니다." class="level3" data-number="1.1.3">
<h3 data-number="1.1.3" class="anchored" data-anchor-id="dbms-database-management-system-데이터베이스를-관리하고-조작하는-소프트웨어-시스템으로-데이터-저장-검색-수정-삭제-등의-기능을-제공합니다."><span class="header-section-number">1.1.3</span> DBMS (Database Management System): 데이터베이스를 관리하고 조작하는 소프트웨어 시스템으로, 데이터 저장, 검색, 수정, 삭제 등의 기능을 제공합니다.</h3>
</section>
<section id="쿼리-언어-데이터베이스와-상호-작용하기-위한-언어로-sqlstructured-query-language이-가장-널리-사용됩니다." class="level3" data-number="1.1.4">
<h3 data-number="1.1.4" class="anchored" data-anchor-id="쿼리-언어-데이터베이스와-상호-작용하기-위한-언어로-sqlstructured-query-language이-가장-널리-사용됩니다."><span class="header-section-number">1.1.4</span> 쿼리 언어: 데이터베이스와 상호 작용하기 위한 언어로, SQL(Structured Query Language)이 가장 널리 사용됩니다.</h3>
</section>
<section id="인덱스index-데이터-검색-속도를-높이기-위해-사용되는-구조로-데이터의-특정-속성에-대한-빠른-접근을-지원합니다." class="level3" data-number="1.1.5">
<h3 data-number="1.1.5" class="anchored" data-anchor-id="인덱스index-데이터-검색-속도를-높이기-위해-사용되는-구조로-데이터의-특정-속성에-대한-빠른-접근을-지원합니다."><span class="header-section-number">1.1.5</span> 인덱스(Index): 데이터 검색 속도를 높이기 위해 사용되는 구조로, 데이터의 특정 속성에 대한 빠른 접근을 지원합니다.</h3>
</section>
</section>
<section id="활용-예시" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="활용-예시"><span class="header-section-number">1.2</span> 활용 예시</h2>
<p>비즈니스 운영: 고객 관리, 재고 관리, 주문 처리 등 다양한 비즈니스 프로세스를 지원합니다. 웹 애플리케이션: 사용자 정보, 콘텐츠 관리, 트랜잭션 데이터 등을 저장하고 관리합니다. 분석 및 보고: 데이터 웨어하우스를 통해 대규모 데이터 분석 및 비즈니스 인텔리전스 활동을 지원합니다.</p>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/conceptual_data_modeling.html</guid>
  <pubDate>Sat, 01 Jul 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Database의 기능</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/database.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="database" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Database</h1>
<ul>
<li>데이터베이스(database)는 구조화된 데이터의 집합체 (데이터 저장소)</li>
<li>특정 목적을 위해 체계적으로 저장되고 관리되는 데이터의 모임이다.</li>
<li>데이터베이스는 데이터를 효율적으로 저장하고 검색할 수 있도록 설계되었으며,</li>
<li>다양한 응용 프로그램과 시스템에서 데이터를 쉽게 접근하고 조작할 수 있도록 지원하는 역할을 한다.</li>
</ul>
</section>
<section id="database의-특성" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Database의 특성</h1>
<section id="구조화된-데이터" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="구조화된-데이터"><span class="header-section-number">2.1</span> 구조화된 데이터</h2>
<p>데이터베이스는 데이터를 표(table), 행(row), 열(column)과 같은 형태로 조직하여 구조화된 방식으로 저장한다.</p>
</section>
<section id="데이터-무결성" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="데이터-무결성"><span class="header-section-number">2.2</span> 데이터 무결성</h2>
<p>데이터베이스는 데이터를 정확하고 일관되게 유지하기 위해 다양한 무결성 제약 조건을 적용한다.</p>
</section>
<section id="데이터-접근성" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="데이터-접근성"><span class="header-section-number">2.3</span> 데이터 접근성</h2>
<p>데이터베이스 관리 시스템(DBMS)은 사용자가 데이터를 쉽게 접근하고 검색할 수 있도록 다양한 쿼리 언어(예: SQL)를 제공한다.</p>
</section>
<section id="보안" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="보안"><span class="header-section-number">2.4</span> 보안</h2>
<p>데이터베이스는 데이터에 대한 접근 권한을 제어하여 데이터의 보안을 유지한다.</p>
</section>
<section id="동시성-다중-사용자-지원" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="동시성-다중-사용자-지원"><span class="header-section-number">2.5</span> 동시성 (다중 사용자 지원)</h2>
<p>데이터베이스는 여러 사용자가 동시에 데이터를 접근하고 수정할 수 있도록 지원한다.</p>
</section>
</section>
<section id="database-system은-어떤-경우에-사용해야하나" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Database System은 어떤 경우에 사용해야하나?</h1>
<section id="데이터베이스가-필요한-경우" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="데이터베이스가-필요한-경우"><span class="header-section-number">3.1</span> 데이터베이스가 필요한 경우</h2>
<section id="대량의-데이터-관리가-필요할-때" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="대량의-데이터-관리가-필요할-때"><span class="header-section-number">3.1.1</span> 대량의 데이터 관리가 필요할 때</h3>
<ul>
<li>수천에서 수백만 건 이상의 데이터를 효율적으로 저장하고 검색해야 할 때 데이터베이스가 필요하다.</li>
<li>예시: 대규모 전자상거래 웹사이트의 상품 목록, 고객 정보, 주문 내역 관리.</li>
</ul>
</section>
<section id="데이터-일관성과-무결성-유지를-해야할-때" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="데이터-일관성과-무결성-유지를-해야할-때"><span class="header-section-number">3.1.2</span> 데이터 일관성과 무결성 유지를 해야할 때</h3>
<ul>
<li>데이터를 여러 사용자가 동시에 접근하고 수정하는 환경에서 데이터의 일관성과 무결성을 유지해야 할 때 데이터베이스가 필요하다</li>
<li>예시: 은행 시스템에서 계좌 거래 내역 관리.</li>
</ul>
</section>
<section id="복잡한-쿼리와-데이터-분석을-해야할-때" class="level3" data-number="3.1.3">
<h3 data-number="3.1.3" class="anchored" data-anchor-id="복잡한-쿼리와-데이터-분석을-해야할-때"><span class="header-section-number">3.1.3</span> 복잡한 쿼리와 데이터 분석을 해야할 때</h3>
<ul>
<li>데이터베이스 시스템은 이를 효율적으로 수행할 수 있는 도구와 최적화된 알고리즘을 제공한다.</li>
<li>예시: 마케팅 데이터를 분석하여 고객 행동 패턴을 추출하는 경우.</li>
</ul>
</section>
<section id="데이터-보안-및-접근-제어를-해야할-때" class="level3" data-number="3.1.4">
<h3 data-number="3.1.4" class="anchored" data-anchor-id="데이터-보안-및-접근-제어를-해야할-때"><span class="header-section-number">3.1.4</span> 데이터 보안 및 접근 제어를 해야할 때</h3>
<ul>
<li>민감한 데이터를 저장하고, 사용자별 접근 권한을 관리해야 할 때 데이터베이스가 필요하다.</li>
<li>예시: 의료 기록 시스템에서 환자 정보 관리.</li>
</ul>
</section>
<section id="데이터-백업-및-복구가-필요할-때" class="level3" data-number="3.1.5">
<h3 data-number="3.1.5" class="anchored" data-anchor-id="데이터-백업-및-복구가-필요할-때"><span class="header-section-number">3.1.5</span> 데이터 백업 및 복구가 필요할 때</h3>
<ul>
<li>데이터 손실에 대비하여 정기적인 백업과 복구 기능이 필요할 때 데이터베이스가 유용하다.</li>
<li>예시: 기업의 중요한 문서와 기록 보관.</li>
</ul>
</section>
</section>
<section id="데이터베이스가-필요하지-않은-경우" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="데이터베이스가-필요하지-않은-경우"><span class="header-section-number">3.2</span> 데이터베이스가 필요하지 않은 경우</h2>
<p>사실, 위의 데이터베이스가 필요한 경우에 해당되지 않는 경우 소프트웨어 알고리즘만으로 왠만하면 처리가 가능한 경우</p>
<section id="데이터의-양이-적고-단순히-메모리-내에서-관리할-수-있는-경우" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="데이터의-양이-적고-단순히-메모리-내에서-관리할-수-있는-경우"><span class="header-section-number">3.2.1</span> 데이터의 양이 적고, 단순히 메모리 내에서 관리할 수 있는 경우</h3>
<ul>
<li>간단한 게임의 점수 기록</li>
<li>소규모 개인 프로젝트 데이터 관리.</li>
<li>전자식 개폐장치의 비밀번호 관리
<ul>
<li>Data가 필요하지만 입력받은 번호를 저장해놔야 정답 비밀번호와 비교 가능 하지만 이것 역시 알고리즘 프로그램 회로로 대체 가능. 한명이 한번에 번호를 눌러 정답과 비교. DB가 필요하지 않음</li>
</ul></li>
</ul>
</section>
<section id="데이터-일관성이나-동시-접근에-대한-요구가-낮아-단순한-파일-시스템이나-메모리-구조로-충분한-경우" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="데이터-일관성이나-동시-접근에-대한-요구가-낮아-단순한-파일-시스템이나-메모리-구조로-충분한-경우"><span class="header-section-number">3.2.2</span> 데이터 일관성이나 동시 접근에 대한 요구가 낮아 단순한 파일 시스템이나 메모리 구조로 충분한 경우</h3>
<ul>
<li>개인용 메모 애플리케이션.</li>
</ul>
</section>
<section id="복잡한-쿼리나-데이터-관계가-필요-없는-단순한-데이터-저장-및-검색" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="복잡한-쿼리나-데이터-관계가-필요-없는-단순한-데이터-저장-및-검색"><span class="header-section-number">3.2.3</span> 복잡한 쿼리나 데이터 관계가 필요 없는 단순한 데이터 저장 및 검색</h3>
<ul>
<li>설정 파일이나 캐시 데이터 저장.</li>
</ul>
</section>
<section id="임시로-사용되는-데이터로-지속적인-저장이-필요하지-않은-경우" class="level3" data-number="3.2.4">
<h3 data-number="3.2.4" class="anchored" data-anchor-id="임시로-사용되는-데이터로-지속적인-저장이-필요하지-않은-경우"><span class="header-section-number">3.2.4</span> 임시로 사용되는 데이터로, 지속적인 저장이 필요하지 않은 경우</h3>
<ul>
<li>실시간 데이터 처리 애플리케이션에서의 중간 계산 결과</li>
<li>신호등의 램프 제어: 소규모 Data 필요(신호의 상태를 기억하고 있어야 다음 신호 상태를 결정할 수 있음), 하지만 알고리즘으로 관리할 수 있는 프로그램 회로가 기능 대체 가능. 실질적으론 DB가 필요하지 않음</li>
</ul>
</section>
<section id="데이터-보안이-중요하지-않은-경우" class="level3" data-number="3.2.5">
<h3 data-number="3.2.5" class="anchored" data-anchor-id="데이터-보안이-중요하지-않은-경우"><span class="header-section-number">3.2.5</span> 데이터 보안이 중요하지 않은 경우</h3>
<ul>
<li>데이터 보안이 큰 우려사항이 아니며, 기본적인 접근 제어만 필요한 경우.</li>
<li>공개된 데이터를 사용하는 단순 웹 크롤러.</li>
</ul>
</section>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/database.html</guid>
  <pubDate>Sat, 01 Jul 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Introduction to Data Modeling</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/introduction.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="motivation" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Motivation</h1>
<p>데이터 플랫폼은 data를 기반으로 플랫폼 생태계를 관리를 가능하게 하며 유저들의 needs관리와 경향 분석을 자동화할 수 있다. 구체적으로, 기업에겐 데이터를 수집, 저장, 처리, 분석 및 배포하여 비즈니스 의사결정 지원, 운영 효율성 향상, 고객 경험 개선, 비용 절감 및 혁신을 촉진하는 통합 시스템으로서 중요한 전략적 자산이 될 수 있다.</p>
<p>데이터 모델링은 이러한 플랫폼의 성공적인 구현과 운영에 필수적이며, 데이터를 효율적으로 구조화하고 관리하여 데이터의 무결성, 일관성 및 성능을 보장한다. 따라서 데이터 모델링과 데이터 플랫폼은 상호 보완적으로 작용하여 데이터 중심의 비즈니스 환경을 구축하고 기업의 경쟁력을 강화할 수 있다.</p>
<p>많은 한국의 기업은 미국의 기업보다 data platform의 이해와 도입이 한 박자 늦지만 data platform구축에 많은 노력을 기울이고 있다. 지금 다니고 있는 회사도 한창 data governance와 통계 플랫폼 구축에 힘을 쏟고 있지만 부서와의 의사소통, 체계, 문서 및 지식 부족으로 인해 상당한 난항을 겪고 있다. 이 블로깅을 통해 지식을 체계화하여 실무적 도움과 의사 소통에 도움이 되었으면 좋겠다.</p>
</section>
<section id="data-modeling" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Data Modeling</h1>
<ul>
<li><strong>데이터 모델링(data modeling)</strong>은 데이터를 구조화하고 체계적으로 조직화하는 과정이다.
<ul>
<li>즉, 데이터베이스 시스템 (Database System)에서 데이터를 어떻게 저장하고, 접근하며, 사용할지를 정의하는 데 중점을 둔다.</li>
</ul></li>
<li>나는 데이터 모델링이 데이터베이스 설계를 포함하는 상위 개념으로 이해하고 있다.</li>
<li>데이터 모델링이 데이터의 구조와 관계를 정의하는 전체 과정을 포괄한다면</li>
<li>데이터 모델링에서 얻은 정보를 바탕으로 데이터베이스 설계를 하여 데이터베이스 시스템의 논리적 및 물리적 구현에 중점을 둔다.</li>
<li>Data modeling과 DB design은 엄밀히 말하면 다르다곤 하지만 실무자들이나 많은 사람들은 혼용하고 있는 것 같아 보인다.</li>
</ul>
</section>
<section id="data-modeling의-단계" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Data Modeling의 단계</h1>
<section id="요구사항-수집-및-분석" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="요구사항-수집-및-분석"><span class="header-section-number">3.1</span> 요구사항 수집 및 분석</h2>
<ul>
<li>사용자의 요구사항을 수집하고 분석하여 어떤 데이터가 필요한지, 어떤 데이터 관계가 있는지를 이해한다.</li>
</ul>
</section>
<section id="개념적-데이터-모델링-conceptual-data-modeling" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="개념적-데이터-모델링-conceptual-data-modeling"><span class="header-section-number">3.2</span> 개념적 데이터 모델링 (Conceptual Data Modeling)</h2>
<ul>
<li>데이터베이스에 저장될 데이터의 개념적 구조를 정의한다.</li>
<li>개념적 모델은 보통 ERD(Entity-Relationship Diagram)와 같은 도구를 사용하여 엔티티(entity), 속성(attribute), 관계(relationship)를 시각적으로 표현한다.</li>
</ul>
</section>
<section id="논리적-데이터-모델링-logical-data-modeling" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="논리적-데이터-모델링-logical-data-modeling"><span class="header-section-number">3.3</span> 논리적 데이터 모델링 (Logical Data Modeling)</h2>
<ul>
<li>개념적 모델을 기반으로 데이터베이스의 논리적 구조를 정의한다.</li>
<li>이 단계에서는 데이터 타입, 관계, 키(key) 등을 포함한 데이터베이스 스키마를 설계한다.</li>
</ul>
</section>
<section id="물리적-데이터-모델링-physical-data-modeling" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="물리적-데이터-모델링-physical-data-modeling"><span class="header-section-number">3.4</span> 물리적 데이터 모델링 (Physical Data Modeling)</h2>
<ul>
<li>논리적 모델을 실제 데이터베이스 관리 시스템(DBMS)에서 구현 가능한 물리적 구조로 변환한다.</li>
<li>테이블, 인덱스, 파티션 등 데이터베이스의 물리적 요소를 설계한다.</li>
</ul>
</section>
<section id="데이터베이스-구현-및-관리" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="데이터베이스-구현-및-관리"><span class="header-section-number">3.5</span> 데이터베이스 구현 및 관리</h2>
<ul>
<li>물리적 모델을 실제 데이터베이스로 구현하고, 이를 유지 보수하며, 성능을 최적화한다.</li>
</ul>
<p>앞으로, Data Modeling의 단계를 구체적으로 이해하여 실무에 적용할 수 있는 염감을 얻도록 해보자.</p>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/data_modeling/introduction.html</guid>
  <pubDate>Fri, 30 Jun 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Pathlib Library</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/Python/pathlib.html</link>
  <description><![CDATA[ 




<section id="pathlib" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="pathlib"><span class="header-section-number">1</span> pathlib</h2>
<p><code>pathlib</code>은 산재된 데이터를 체계적으로 관리하고, 데이터 분석이나 엔지니어링 작업을 수행할 때 매우 유용한 도구이다. 파일 시스템에서의 데이터 접근, 조작, 관리를 간결하고 효율적으로 할 수 있게 해주기 때문이다.</p>
<section id="pathlib-기능" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="pathlib-기능"><span class="header-section-number">1.1</span> <code>pathlib</code> 기능</h3>
<ul>
<li>경로 조작: 경로를 쉽게 조합하고, 분해하며, 변경할 수 있다.</li>
<li>파일 시스템 정보 조회: 파일의 존재 유무 확인, 파일 크기 조회, 수정 날짜 조회 등의 정보를 쉽게 얻을 수 있다.</li>
<li>파일 시스템 작업: 파일 또는 디렉토리 생성, 읽기, 쓰기, 이름 변경, 삭제 등의 작업을 할 수 다.</li>
<li>경로 탐색: 특정 패턴이나 조건에 맞는 파일을 경로 내에서 찾을 수 있다.</li>
</ul>
</section>
<section id="응용-상황" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="응용-상황"><span class="header-section-number">1.2</span> 응용 상황</h3>
<ol type="1">
<li>데이터 파일 구조화 및 접근
<ul>
<li>동적 경로 생성: 다양한 데이터 소스나 폴더 구조에 대한 동적 경로를 쉽게 생성할 수 있다. 예를 들어, 날짜별로 구분된 로그 파일을 처리할 때 <code>Path</code> 객체를 사용하여 해당 날짜의 경로를 쉽게 생성할 수 있다.</li>
<li>파일 탐색: 특정 패턴이나 조건에 맞는 파일들을 <code>glob</code> 또는 <code>rglob</code> 메소드를 사용하여 쉽게 찾을 수 있다. 이는 분석 대상 파일을 자동으로 식별하는 데 유용하다.</li>
</ul></li>
<li>데이터 파일 읽기 및 쓰기 작업
<ul>
<li>파일 읽기/쓰기: <code>pathlib</code>을 사용하면 파일을 열고 읽거나 쓰는 작업을 직관적으로 수행할 수 있다. <code>Path</code> 객체의 <code>read_text</code>, <code>write_text</code>, <code>read_bytes</code>, <code>write_bytes</code> 메소드를 활용하여 파일 내용을 쉽게 처리할 수 있다.</li>
</ul></li>
<li>파일 및 디렉토리 관리
<ul>
<li>파일 생성 및 삭제: <code>touch</code> 메소드로 새 파일을 생성하거나, <code>unlink</code> 메소드로 파일을 삭제할 수 있다.</li>
<li>디렉토리 생성 및 삭제: 생성에는 <code>mkdir</code> 메소드를, 삭제에는 <code>rmdir</code> 메소드를 사용할 수 있다.</li>
<li>경로 유효성 검사: 파일이나 디렉토리의 존재 여부를 확인하고, 경로가 파일인지 디렉토리인지 등의 속성을 검사할 수 있다.</li>
</ul></li>
<li>플랫폼 독립적 경로 처리
<ul>
<li>운영 체제 호환성: <code>pathlib</code>은 윈도우, 맥, 리눅스 등 다양한 운영 체제에서 동일하게 작동하므로, 코드의 이식성이 향상된다.</li>
</ul></li>
</ol>
</section>
<section id="example" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="example"><span class="header-section-number">1.3</span> Example</h3>
<ul>
<li>동적 경로 생성 예시</li>
</ul>
<p>날짜별 로그 파일이 저장된 디렉토리 구조를 가정하고, 특정 날짜에 해당하는 로그 파일의 경로를 동적으로 생성하는 방법.</p>
<div id="879eccdf" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 현재 날짜를 기준으로 경로 생성</span></span>
<span id="cb1-4">current_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-5">log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./logs/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>current_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 해당 날짜의 로그 디렉토리가 없다면 생성</span></span>
<span id="cb1-8">log_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예시 로그 파일 경로</span></span>
<span id="cb1-11">log_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> log_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error.log"</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"오늘 날짜의 로그 파일 경로: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>log_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
</details>
</div>
<ul>
<li>파일 탐색 예시
<ul>
<li><code>glob</code> 메소드를 사용하여 특정 패턴(예: 모든 <code>.txt</code> 파일)에 맞는 파일들을 탐색하는 방법</li>
<li><code>rglob</code>는 현재 디렉토리뿐만 아니라 모든 하위 디렉토리에서도 탐색을 수행</li>
</ul></li>
</ul>
<div id="83467b03" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 현재 디렉토리의 모든 .txt 파일 탐색</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> txt_file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>).glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.txt"</span>):</span>
<span id="cb2-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Found text file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>txt_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 현재 디렉토리 및 모든 하위 디렉토리의 .txt 파일 탐색</span></span>
<span id="cb2-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> txt_file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>).rglob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.txt"</span>):</span>
<span id="cb2-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Found text file in current and subdirectories: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>txt_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .csv 파일 탐색</span></span>
<span id="cb2-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> file_path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.csv"</span>):</span>
<span id="cb2-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"CSV 파일 처리: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 읽기 및 처리</span></span>
<span id="cb2-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> file_path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data_dir.iterdir():</span>
<span id="cb2-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> file_path.is_file() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> file_path.suffix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".txt"</span>:</span>
<span id="cb2-16">        content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_path.read_text()</span>
<span id="cb2-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 내용 처리</span></span>
<span id="cb2-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 파일의 내용 처리"</span>)</span></code></pre></div>
</details>
</div>
<ul>
<li>파일 읽기/쓰기</li>
</ul>
<div id="dce0d4b6" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 파일 경로 생성</span></span>
<span id="cb3-2">text_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./example.txt"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 파일 쓰기</span></span>
<span id="cb3-5">text_file_path.write_text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello, pathlib! This is a text file."</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 텍스트 파일 읽기</span></span>
<span id="cb3-8">text_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_file_path.read_text()</span>
<span id="cb3-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text file content:"</span>, text_content)</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 바이너리 파일 경로 생성</span></span>
<span id="cb3-12">binary_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example.bin"</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 바이너리 파일 쓰기 (예제 데이터로 'Hello, pathlib!' 문자열의 바이트를 사용)</span></span>
<span id="cb3-15">binary_file_path.write_bytes(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"Hello, pathlib! This is a binary file."</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 바이너리 파일 읽기</span></span>
<span id="cb3-18">binary_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> binary_file_path.read_bytes()</span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Binary file content:"</span>, binary_content)</span></code></pre></div>
</details>
</div>
<ul>
<li>파일 생성 및 삭제</li>
</ul>
<div id="8fc0efbc" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새 파일 생성</span></span>
<span id="cb4-2">new_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./new_file.txt"</span>)</span>
<span id="cb4-3">new_file.touch()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일이 존재하지 않으면 생성</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 존재 여부 확인</span></span>
<span id="cb4-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> new_file.exists():</span>
<span id="cb4-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> exists."</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 삭제</span></span>
<span id="cb4-10">new_file.unlink()</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 존재 여부 재확인</span></span>
<span id="cb4-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> new_file.exists():</span>
<span id="cb4-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> has been deleted."</span>)</span></code></pre></div>
</details>
</div>
<ul>
<li>디렉토리 생성 및 삭제</li>
</ul>
<div id="d64d159b" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새 디렉토리 생성</span></span>
<span id="cb5-2">new_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./new_directory"</span>)</span>
<span id="cb5-3">new_dir.mkdir(parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리가 존재하지 않으면 생성, 이미 있으면 오류 발생하지 않음</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리 존재 여부 확인</span></span>
<span id="cb5-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> new_dir.exists():</span>
<span id="cb5-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> exists."</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리 삭제</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 주의: rmdir()는 디렉토리가 비어 있을 때만 사용 가능</span></span>
<span id="cb5-11">new_dir.rmdir()</span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 디렉토리 존재 여부 재확인</span></span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> new_dir.exists():</span>
<span id="cb5-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> has been deleted."</span>)</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 현재 디렉토리에 데이터 파일 폴더 생성</span></span>
<span id="cb5-18">data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path.cwd() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_files"</span></span>
<span id="cb5-19">data_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</details>
</div>
<ul>
<li><code>parents=True</code>는 상위 디렉토리가 없는 경우에도 필요한 모든 상위 디렉토리를 함께 생성하라는 의미이다. 예를 들어, <code>/a/b/c/d</code>와 같은 디렉토리를 만들고 싶지만, <code>/a</code>, <code>/a/b</code>, <code>/a/b/c</code> 디렉토리가 아직 없을 때:
<ul>
<li><code>parents=False</code> (기본값)로 설정하고 <code>/a/b/c/d</code> 디렉토리를 생성하려고 하면, 상위 디렉토리가 없기 때문에 <code>FileNotFoundError</code> 오류가 발생.</li>
<li><code>parents=True</code>로 설정하면, Python은 먼저 <code>/a</code>, 그 다음 <code>/a/b</code>, <code>/a/b/c</code>를 차례로 생성한 후, 마지막으로 <code>/a/b/c/d</code>를 생성한다. 즉, 지정된 경로에 필요한 모든 상위 디렉토리를 자동으로 생성해준다.</li>
</ul></li>
</ul>
<div id="90ed368a" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상위 디렉토리가 없는 깊은 경로 설정</span></span>
<span id="cb6-2">deep_directory_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./a/b/c/d"</span>)</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 필요한 상위 디렉토리와 함께 디렉토리 생성</span></span>
<span id="cb6-4">deep_directory_path.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</details>
</div>
<ul>
<li><p><code>exist_ok=True</code>는 지정된 경로에 디렉토리(폴더)를 생성하는 옵션이다. 이 옵션을 True로 설정하면, 만약 생성하려는 디렉토리가 이미 존재하는 경우에도 오류를 발생시키지 않고, 해당 명령을 무시한다. 즉, 해당 디렉토리의 존재 여부와 상관없이 프로그램이 계속 실행될 수 있도록 한다. <code>exist_ok</code> 매개변수의 기본값은 <code>False</code> 이다. 따라서, <code>exist_ok</code>를 명시적으로 지정하지 않고 디렉토리를 생성하려 할 때 해당 디렉토리가 이미 존재한다면, <code>FileExistsError</code>가 발생 및 프로그램이 중단된다.</p></li>
<li><p>이 옵션들을 사용하면, 스크립트의 안정성을 높이고, 디렉토리가 이미 존재하는 상황에서도 원활하게 코드를 실행할 수 있다.</p></li>
<li><p>경로 유효성 검사</p></li>
</ul>
<div id="7d0a76e1" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임의의 파일 및 디렉토리 경로</span></span>
<span id="cb7-2">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example.txt"</span>)</span>
<span id="cb7-3">dir_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example_dir"</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일 및 디렉토리 존재 여부 검사</span></span>
<span id="cb7-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> file_path.exists():</span>
<span id="cb7-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> exists."</span>)</span>
<span id="cb7-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> does not exist."</span>)</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dir_path.exists():</span>
<span id="cb7-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dir_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> exists."</span>)</span>
<span id="cb7-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dir_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> does not exist."</span>)</span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 경로가 파일인지 디렉토리인지 검사</span></span>
<span id="cb7-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> file_path.is_file():</span>
<span id="cb7-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is a file."</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dir_path.is_dir():</span>
<span id="cb7-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dir_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> is a directory."</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="실무-적용" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="실무-적용"><span class="header-section-number">1.4</span> 실무 적용</h3>
<div id="42e4a1de" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">root_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> path.cwd() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># /home/kmkim/pda/dsp-research-strep-a/kkm</span></span>
<span id="cb8-2">prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span></span>
<span id="cb8-3">directory_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfx-baseline-subtraction'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pda-raw-sample'</span>]</span>
<span id="cb8-4">product_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GI-B-I'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GI-B-II'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GI-P'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GI-V'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RP1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RP2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RP3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RP4'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'STI-CA'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'STI-EA'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'STI-GU'</span>]</span>
<span id="cb8-5">consumables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8-strip'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'96-cap'</span>]</span>
<span id="cb8-6">plate_numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'002'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'005'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'031'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'032'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'035'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'036'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'041'</span>]</span>
<span id="cb8-7"></span>
<span id="cb8-8">cfx_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-9">raw_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> directory_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> directory_names: </span>
<span id="cb8-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> product_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GI-B-I'</span>]: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#product_names:</span></span>
<span id="cb8-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> consumable <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'8-strip'</span>]: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#consumables:</span></span>
<span id="cb8-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> plate_number <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plate_numbers:</span>
<span id="cb8-15">                full_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> root_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> directory_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> product_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> consumable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> plate_number</span>
<span id="cb8-16">                processed_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> full_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"processed"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example1"</span></span>
<span id="cb8-17">                processed_path.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-18">                exporting_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  full_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"exported_pcrd"</span></span>
<span id="cb8-19">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cfx'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> exporting_path: </span>
<span id="cb8-20">                    temp_cfx_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bioradparse.load_pcrdata(exporting_path, datatype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cfx-xl"</span>)</span>
<span id="cb8-21">                    cfx_data.append(temp_cfx_data)</span>
<span id="cb8-22">                temp_raw_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bioradparse.load_pcrdata(exporting_path, datatype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cfx-batch-csv"</span>)</span>
<span id="cb8-23">                raw_data.append(temp_raw_data)</span>
<span id="cb8-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#pathlib.Path(f"./data/baseline-subtracted/processed/example1")</span></span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> pcrname, pcrdata <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> raw_data.items():</span>
<span id="cb8-27">    bioradparse.save_pcrdata(raw_data, root_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pda-raw-sample"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"processed"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example1"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pcrname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.parquet"</span>)</span>
<span id="cb8-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> pcrname, pcrdata <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cfx_data.items():</span>
<span id="cb8-29">    bioradparse.save_pcrdata(cfx_data, root_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cfx-baseline-subtraction"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"processed"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example1"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pcrname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.parquet"</span>)</span></code></pre></div>
</details>
</div>


</section>
</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/Python/pathlib.html</guid>
  <pubDate>Fri, 30 Jun 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Package Management - 1</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/Python/package_management.html</link>
  <description><![CDATA[ 




<section id="requirements.txt-를-이용한-packages-관리" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="requirements.txt-를-이용한-packages-관리"><span class="header-section-number">1</span> requirements.txt 를 이용한 packages 관리</h2>
<p>여러 projects를 오랫동안 관리하다 보면 다수의 packages를 설치해야하는데 이 와중에 PC 포맷, fork, cloning과 같은 code를 옮겨야하는 일이 생길 수 있다. 이렇게 새로운 환경에서 이전에 관리하던 projects를 재현해야하는데 수 많은 packages를 하나 하나씩 재설치해야하는 것은 여간 번거로운 작업이 아니다.</p>
<ul>
<li><code>pip list</code>를 이용한 pip로 설치된 패키지 조회
<ul>
<li>아래와 같이 package list들이 출력이 된다 (일부 스크린샷함). 이 많은 packages를 하나 하나씩 <code>conda install package_name</code> 실행하여 설치할 순 없다. <img src="kmink3225.netlify.app/images/python/requirements1.PNG" class="img-fluid" alt="pip list 명령어 결과물"></li>
</ul></li>
<li><code>pip freeze &gt; requirements.txt</code> 명령어를 실행하여 requirements.txt 를 만들어 준다. 이 txt 파일 안에는 packages의 이름과 version 정보까지 기록되어 있는 것을 확인할 수 있다.</li>
<li><code>pip install -r requirements.txt</code> 명령어를 실행하여 requirements.txt 에 있는 packages를 한꺼번에 설치할 수 있게 된다.</li>
</ul>


</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/Python/package_management.html</guid>
  <pubDate>Wed, 31 May 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Airflow Introduction</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/airflow/01.intro.html</link>
  <description><![CDATA[ 




<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div id="language-tabcontent" class="tab-content">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<ul>
<li>파이썬을 이용해 워크플로우를 만들고 관리할 수 있는 오픈소스 기반 워크플로우 관리 도구</li>
<li>2014년 에어비앤비에서 만든 워크플로우 관리 솔루션으로 현재는 Apache Open Source 재단에서 관리되고 있는 프로젝트</li>
<li>Airflow는 워크플로우를 DAG을 사용하여 정의하고, 관리하는 프로그램
<ul>
<li>자유도가 크고, 확장성이 좋은 워크플로우 관리 프로그램</li>
</ul></li>
</ul>
<section id="characteristics" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="characteristics"><span class="header-section-number">1.1</span> Characteristics</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div id="fig-workflow" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div>
<svg width="672" height="480" viewbox="0.00 0.00 343.92 169.48" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="; max-width: none; max-height: none">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 165.48)">
<title>G</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-165.48 339.92,-165.48 339.92,4 -4,4"></polygon>
<!-- REST API를 사용한 데이터를 받아 전처리 -->
<g id="node1" class="node">
<title>REST API를 사용한 데이터를 받아 전처리</title>
<ellipse fill="none" stroke="black" cx="156.43" cy="-143.48" rx="156.37" ry="18"></ellipse>
<text text-anchor="middle" x="156.43" y="-139.28" font-family="Times,serif" font-size="14.00">REST API를 사용한 데이터를 받아 전처리</text>
</g>
<!-- 기존 DB의 데이터 삭제 (중복 제거) -->
<g id="node2" class="node">
<title>기존 DB의 데이터 삭제 (중복 제거)</title>
<ellipse fill="none" stroke="black" cx="200.45" cy="-86.15" rx="129.73" ry="18"></ellipse>
<text text-anchor="middle" x="200.45" y="-81.95" font-family="Times,serif" font-size="14.00">기존 DB의 데이터 삭제 (중복 제거)</text>
</g>
<!-- REST API를 사용한 데이터를 받아 전처리&#45;&#45;기존 DB의 데이터 삭제 (중복 제거) -->
<g id="edge1" class="edge">
<title>REST API를 사용한 데이터를 받아 전처리--기존 DB의 데이터 삭제 (중복 제거)</title>
<path fill="none" stroke="black" d="M170.36,-125.34C175.5,-118.65 181.32,-111.07 186.46,-104.37"></path>
</g>
<!-- 전처리한 데이터를 DB에 삽입 -->
<g id="node3" class="node">
<title>전처리한 데이터를 DB에 삽입</title>
<ellipse fill="none" stroke="black" cx="224.56" cy="-18" rx="111.23" ry="18"></ellipse>
<text text-anchor="middle" x="224.56" y="-13.8" font-family="Times,serif" font-size="14.00">전처리한 데이터를 DB에 삽입</text>
</g>
<!-- 기존 DB의 데이터 삭제 (중복 제거)&#45;&#45;전처리한 데이터를 DB에 삽입 -->
<g id="edge2" class="edge">
<title>기존 DB의 데이터 삭제 (중복 제거)--전처리한 데이터를 DB에 삽입</title>
<path fill="none" stroke="black" d="M206.91,-67.89C210.37,-58.11 214.62,-46.1 218.08,-36.31"></path>
</g>
</g>
</svg>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Airflow Workflow Simple Example
</figcaption>
</figure>
</div>
</div>
</div>
<ul>
<li>파이썬으로 제작된 도구이며 이용자가 워크플로우 생성시에도 파이썬으로 구현해야 함</li>
<li>하나의 워크플로우는 DAG(Directed Acyclic Graph) 이라 부르며 DAG 안에는 1개 이상의 Task가 존재
<ul>
<li>예를 들어, REST API로부터 데이터를 내려 받아 DB에 insert하려는 과제를 수행하기 위해 Figure&nbsp;1 와 같은 단계들이 필요하다.</li>
<li>각 각의 단계를 task라 하고 각 각 선/후행 단계가 있다. (1번 task <img src="https://latex.codecogs.com/png.latex?%5Crightarrow"> 2번 task <img src="https://latex.codecogs.com/png.latex?%5Crightarrow"> 3번 task)</li>
<li>이 tasks의 집합을 DAG이라고 한다.</li>
<li>Task간 선후행 연결이 가능하되 순환되지 않고 방향성을 가짐(=DAG)</li>
</ul></li>
<li>Cron 기반의 스케줄링
<ul>
<li>Linux에서 사용되는 스케쥴링으로 task들이 시작되어야 하는 시작 시간이나 주기를 설정</li>
</ul></li>
<li>모니터링 및 실패 작업에 대한 재실행 기능이 간편</li>
</ul>
<div id="fig-DAG_example" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-DAG_example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="kmink3225.netlify.app/images/airflow/intro_dag-example.PNG" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-DAG_example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: DAG Simple Example
</figcaption>
</figure>
</div>
<ul>
<li>In Figure&nbsp;2, 초록색 테두리의 node는 성공한 task를 의미하고 분홍색 테두리의 node는 실패한 task를 의미한다. 위의 그림에는 없지만 회색 테두리는 queue (준비) 상태를 의미한다. Airflow에는 DAG이 일련의 task로 구성되어 있기 때문에 실행 상태도 성공, 실패 및 준비 상태같은 여러 종류가 있다. 나머지 상태는 뒷 부분에서 차차 다뤄보기로 한다.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/images/airflow/task-status.PNG" class="img-fluid figure-img"></p>
<figcaption>Task Status</figcaption>
</figure>
</div>
</section>
<section id="motivation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="motivation"><span class="header-section-number">1.2</span> Motivation</h2>
<section id="why-to-learn-airflow" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="why-to-learn-airflow"><span class="header-section-number">1.2.1</span> Why to Learn Airflow?</h3>
<div id="fig-comparison" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-comparison-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-comparison" style="flex-basis: 100.0%;justify-content: flex-start;">
<div id="fig-workflowDemand" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-workflowDemand-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="kmink3225.netlify.app/images/airflow/intro_airflow-demand.PNG" class="img-fluid figure-img" data-ref-parent="fig-comparison">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-workflowDemand-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(a) Orchestrating Task Tools (a.k.a Data Workflows) Demand Comparison
</figcaption>
</figure>
</div>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell-subref quarto-layout-cell" data-ref-parent="fig-comparison" style="flex-basis: 100.0%;justify-content: flex-start;">
<div id="fig-workflowComputation" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-subfloat-fig figure">
<div aria-describedby="fig-workflowComputation-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="kmink3225.netlify.app/images/airflow/intro_airflow-comparison.PNG" class="img-fluid figure-img" data-ref-parent="fig-comparison">
</div>
<figcaption class="quarto-float-caption-bottom quarto-subfloat-caption quarto-subfloat-fig" id="fig-workflowComputation-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
(b) Orchestrating Task Tools Computation Comparison
</figcaption>
</figure>
</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-comparison-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: <a href="https://towardsdatascience.com/airflow-vs-luigi-vs-argo-vs-mlflow-vs-kubeflow-b3785dd1ed0c">Airflow Figure Reference: Airflow vs.&nbsp;Luigi vs.&nbsp;Argo vs.&nbsp;MLFlow vs.&nbsp;KubeFlow by Markus Schmitt</a>
</figcaption>
</figure>
</div>
<ul>
<li>Maturity: 성숙도로서 github에서 얼마나 많은 사람들이 관리하고 있는지 즉 community의 활성도를 나타내는 지표. 유료 서비스의 경우 user 가 제작사에게 패치를 요청할 수 있지만 open source에 경우 제작사가 없어 community의 활성도가 중요하다.</li>
<li>Popularity: github starts의 개수</li>
<li>Simplicity: workflow를 얼마나 쉽게 사용할 수 있는지에 대한 난이도로 airflow는 사용하기에 어려운 난이도를 보여준다.</li>
<li>Breadth: 확장성. 즉 얼마나 customizing할 수 있는지 보여주는 척도</li>
</ul>
<p>Figure&nbsp;3 을 보면, Figure&nbsp;3 (a) 에서 볼수 있듯이 최근 들어 airflow의 인기가 급증하는 것을 볼 수 있다. Figure&nbsp;3 (b) 에서 그 이유를 짐작할 수 있는데 airflow가 simplicity가 C 사용하기는 어렵지만 구현할 수 있는 폭 breadth가 높다 (Breadth: A). 즉, 다른 workflows에 비해 복잡한 코딩을 요구하는 만큼 그 자유도가 높다는 것을 짐작할 수 있다.</p>
</section>
</section>
<section id="strength" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="strength"><span class="header-section-number">1.3</span> Strength</h2>
<ul>
<li>파이썬에 익숙하다면 러닝 커브 빠르게 극복 가능</li>
<li>대규모 워크플로우 환경에서 부하 증가시 수평적 확장 가능한 Kubenetes 등 아키텍처 지원</li>
<li>파이썬에서 지원되는 라이브러리 활용하여 다양한 도구 컨트롤 가능 (GCP, AWS등 대다수 클라우드에서 제공하는 서비스)
<ul>
<li>GCP: Google Cloud Platform</li>
<li>AWS: Amazon Web Services</li>
</ul></li>
<li>Airflow에서 제공하는 파이썬 소스 기반으로 원하는 작업을 위한 커스터마이징이 가능 (오퍼레이터, Hook, 센서 등)</li>
</ul>
</section>
<section id="weakness" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="weakness"><span class="header-section-number">1.4</span> Weakness</h2>
<ul>
<li>실시간 워크플로우 관리에 적합치 않음 (최소 분 단위 실행)</li>
<li>워크플로우(DAG) 개수가 많아질 경우 모니터링이 쉽지 않음</li>
<li>워크플로우를 GUI환경에서 만들지 않기에 파이썬에 익숙하지 않다면 다루기 쉽지 않음 협업 환경에서 프로그래밍 표준이 없으면 유지관리가 쉽지 않음</li>
</ul>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="go-to-blog-content-list" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Go to Blog Content List</h1>
<p><a href="../../../../../docs/blog/posts/content_list.html">Blog Content List</a><br>
<a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Content List</a></p>


</section>
</div>

</ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/airflow/01.intro.html</guid>
  <pubDate>Sun, 30 Apr 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
